<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170515 19:21:33.802" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/fspcibld/openbmc-test-automation/extended/code_update/update_bmc.robot" id="s1" name="Update Bmc">
<test id="s1-t1" name="Initiate Code Update BMC">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FORCE_UPDATE} == ${0}</arg>
<arg>Prepare BMC For Update</arg>
</arguments>
<kw name="Prepare BMC For Update">
<doc>Prerequisite operation before code update.</doc>
<kw name="Check Boot Count And Time">
<doc>Check for unexpected reboots.</doc>
<kw name="Set BMC Reset Reference Time" library="utils">
<doc>Set current boot time as a reference and increment</doc>
<kw name="Get BMC Boot Time" library="utils">
<doc>Get boot time from /proc/stat.</doc>
<assign>
<var>${cur_btime}</var>
</assign>
<kw name="Open Connection And Log In" library="connection_client">
<doc>Opens a connection with the given arguments, and logs in.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<assign>
<var>${has_host}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<msg timestamp="20170515 19:21:34.723" level="FAIL">Dictionary does not contain key 'host'.</msg>
<status status="FAIL" endtime="20170515 19:21:34.723" starttime="20170515 19:21:34.722"></status>
</kw>
<msg timestamp="20170515 19:21:34.723" level="INFO">${has_host} = False</msg>
<status status="PASS" endtime="20170515 19:21:34.723" starttime="20170515 19:21:34.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${has_host} == ${FALSE}</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:34.724" starttime="20170515 19:21:34.724"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:34.724" starttime="20170515 19:21:34.723"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and '${HTTPS_PORT}' != '${EMPTY}'</arg>
<arg>User input SSH and HTTPs Ports</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:34.725" starttime="20170515 19:21:34.725"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<assign>
<var>${has_port}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<msg timestamp="20170515 19:21:34.726" level="FAIL">Dictionary does not contain key 'port'.</msg>
<status status="FAIL" endtime="20170515 19:21:34.726" starttime="20170515 19:21:34.726"></status>
</kw>
<msg timestamp="20170515 19:21:34.726" level="INFO">${has_port} = False</msg>
<status status="PASS" endtime="20170515 19:21:34.726" starttime="20170515 19:21:34.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and ${has_port} == ${FALSE}</arg>
<arg>Run Keywords</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>port=${SSH_PORT}</arg>
<arg>AND</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>&amp;{connection_args}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:34.728" starttime="20170515 19:21:34.728"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:34.728" starttime="20170515 19:21:34.727"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:34.728" starttime="20170515 19:21:34.727"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20170515 19:21:34.729" level="INFO">Logging into '9.41.166.169:22' as 'root'.</msg>
<msg timestamp="20170515 19:21:36.564" level="INFO">Read output: root@witherspoon:~#</msg>
<status status="PASS" endtime="20170515 19:21:36.564" starttime="20170515 19:21:34.729"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.564" starttime="20170515 19:21:34.721"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>egrep '^btime ' /proc/stat | cut -f 2 -d ' '</arg>
<arg>return_stderr=True</arg>
</arguments>
<assign>
<var>${output}</var>
<var>${stderr}</var>
</assign>
<msg timestamp="20170515 19:21:36.565" level="INFO">Executing command 'egrep '^btime ' /proc/stat | cut -f 2 -d ' ''.</msg>
<msg timestamp="20170515 19:21:36.660" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170515 19:21:36.660" level="INFO">${output} = 1492709349</msg>
<msg timestamp="20170515 19:21:36.660" level="INFO">${stderr} = </msg>
<status status="PASS" endtime="20170515 19:21:36.660" starttime="20170515 19:21:36.565"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${stderr}</arg>
</arguments>
<msg timestamp="20170515 19:21:36.660" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170515 19:21:36.661" starttime="20170515 19:21:36.660"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<assign>
<var>${btime}</var>
</assign>
<msg timestamp="20170515 19:21:36.661" level="INFO">${btime} = 1492709349</msg>
<status status="PASS" endtime="20170515 19:21:36.661" starttime="20170515 19:21:36.661"></status>
</kw>
<msg timestamp="20170515 19:21:36.661" level="INFO">${cur_btime} = 1492709349</msg>
<status status="PASS" endtime="20170515 19:21:36.661" starttime="20170515 19:21:34.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${BOOT_TIME} == ${0} and ${BOOT_COUNT} == ${0}</arg>
<arg>Set Global Variable</arg>
<arg>${BOOT_TIME}</arg>
<arg>${cur_btime}</arg>
<arg>ELSE IF</arg>
<arg>${cur_btime} &gt; ${BOOT_TIME}</arg>
<arg>Run Keywords</arg>
<arg>Set Global Variable</arg>
<arg>${BOOT_TIME}</arg>
<arg>${cur_btime}</arg>
<arg>AND</arg>
<arg>Set Global Variable</arg>
<arg>${BOOT_COUNT}</arg>
<arg>${BOOT_COUNT + 1}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${BOOT_TIME}</arg>
<arg>${cur_btime}</arg>
</arguments>
<msg timestamp="20170515 19:21:36.663" level="INFO">${BOOT_TIME} = 1492709349</msg>
<status status="PASS" endtime="20170515 19:21:36.663" starttime="20170515 19:21:36.663"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.663" starttime="20170515 19:21:36.662"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.663" starttime="20170515 19:21:34.720"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n Boot Count: ${BOOT_COUNT}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:36.664" starttime="20170515 19:21:36.664"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n Boot Time: ${BOOT_TIME}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:36.665" starttime="20170515 19:21:36.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${BOOT_COUNT} &gt; ${MAX_BOOT_COUNT}</arg>
<arg>Log</arg>
<arg>Phantom Reboot!!! Unexpected reboot detected</arg>
<arg>level=WARN</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:36.665" starttime="20170515 19:21:36.665"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.665" starttime="20170515 19:21:34.720"></status>
</kw>
<kw name="Prune Journal Log" library="utils">
<doc>Prune archived journal logs.</doc>
<kw name="Open Connection And Log In" library="connection_client">
<doc>Opens a connection with the given arguments, and logs in.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<assign>
<var>${has_host}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<msg timestamp="20170515 19:21:36.668" level="FAIL">Dictionary does not contain key 'host'.</msg>
<status status="FAIL" endtime="20170515 19:21:36.668" starttime="20170515 19:21:36.668"></status>
</kw>
<msg timestamp="20170515 19:21:36.668" level="INFO">${has_host} = False</msg>
<status status="PASS" endtime="20170515 19:21:36.668" starttime="20170515 19:21:36.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${has_host} == ${FALSE}</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:36.670" starttime="20170515 19:21:36.669"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.670" starttime="20170515 19:21:36.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and '${HTTPS_PORT}' != '${EMPTY}'</arg>
<arg>User input SSH and HTTPs Ports</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:36.670" starttime="20170515 19:21:36.670"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<assign>
<var>${has_port}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<msg timestamp="20170515 19:21:36.671" level="FAIL">Dictionary does not contain key 'port'.</msg>
<status status="FAIL" endtime="20170515 19:21:36.671" starttime="20170515 19:21:36.671"></status>
</kw>
<msg timestamp="20170515 19:21:36.672" level="INFO">${has_port} = False</msg>
<status status="PASS" endtime="20170515 19:21:36.672" starttime="20170515 19:21:36.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and ${has_port} == ${FALSE}</arg>
<arg>Run Keywords</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>port=${SSH_PORT}</arg>
<arg>AND</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>&amp;{connection_args}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:36.674" starttime="20170515 19:21:36.673"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.674" starttime="20170515 19:21:36.673"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:36.674" starttime="20170515 19:21:36.672"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20170515 19:21:36.674" level="INFO">Logging into '9.41.166.169:22' as 'root'.</msg>
<msg timestamp="20170515 19:21:38.283" level="INFO">Read output: root@witherspoon:~#</msg>
<status status="PASS" endtime="20170515 19:21:38.283" starttime="20170515 19:21:36.674"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.283" starttime="20170515 19:21:36.666"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>journalctl --vacuum-size=${vacuum_size}</arg>
<arg>return_stderr=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${output}</var>
<var>${stderr}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20170515 19:21:38.284" level="INFO">Executing command 'journalctl --vacuum-size=1M'.</msg>
<msg timestamp="20170515 19:21:38.414" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20170515 19:21:38.414" level="INFO">${output} = </msg>
<msg timestamp="20170515 19:21:38.414" level="INFO">${stderr} = Vacuuming done, freed 0B of archived journals from /run/log/journal/df66751523a349c581e4fc4d32c5da3c.</msg>
<msg timestamp="20170515 19:21:38.414" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20170515 19:21:38.414" starttime="20170515 19:21:38.283"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
<arg>msg=${stderr}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:38.415" starttime="20170515 19:21:38.414"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.415" starttime="20170515 19:21:36.666"></status>
</kw>
<kw name="Power Off Request" library="state_manager">
<doc>Select appropriate poweroff keyword.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${OBMC_STATES_VERSION}' == '${0}'</arg>
<arg>Initiate Power Off</arg>
<arg>ELSE</arg>
<arg>Initiate Host PowerOff</arg>
</arguments>
<kw name="Initiate Host PowerOff" library="state_manager">
<doc>Initiate host power off.</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=${HOST_POWEROFF_TRANS}</arg>
</arguments>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20170515 19:21:38.417" level="INFO">${args} = {u'data': 'xyz.openbmc_project.State.Host.Transition.Off'}</msg>
<status status="PASS" endtime="20170515 19:21:38.417" starttime="20170515 19:21:38.417"></status>
</kw>
<kw name="Write Attribute" library="rest_client">
<arguments>
<arg>${HOST_STATE_URI}</arg>
<arg>RequestedHostTransition</arg>
<arg>data=${args}</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:38.419" level="INFO">${base_uri} = /xyz/openbmc_project/state/host0/</msg>
<status status="PASS" endtime="20170515 19:21:38.419" starttime="20170515 19:21:38.418"></status>
</kw>
<kw name="OpenBMC Put Request" library="rest_client">
<arguments>
<arg>${base_uri}/attr/${attr}</arg>
<arg>timeout=${timeout}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:21:38.422" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:21:38.423" starttime="20170515 19:21:38.421"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:38.423" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:38.423" starttime="20170515 19:21:38.423"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:21:38.424" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:21:38.424" starttime="20170515 19:21:38.423"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:38.424" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:21:38.425" starttime="20170515 19:21:38.424"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:21:38.694" level="INFO">Post Request using : alias=openbmc, uri=/login, data={"data": ["root", "0penBmc"]}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<status status="PASS" endtime="20170515 19:21:38.694" starttime="20170515 19:21:38.425"></status>
</kw>
<msg timestamp="20170515 19:21:38.694" level="INFO">${status} = PASS</msg>
<msg timestamp="20170515 19:21:38.694" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:38.694" starttime="20170515 19:21:38.425"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:21:38.695" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:38.695" starttime="20170515 19:21:38.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:38.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:38.696" starttime="20170515 19:21:38.695"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.696" starttime="20170515 19:21:38.421"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.696" starttime="20170515 19:21:38.420"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.696" starttime="20170515 19:21:38.420"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:38.697" level="INFO">${base_uri} = /xyz/openbmc_project/state/host0//attr/RequestedHostTransition</msg>
<status status="PASS" endtime="20170515 19:21:38.697" starttime="20170515 19:21:38.696"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:38.697" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:38.697" starttime="20170515 19:21:38.697"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${kwargs}</arg>
<arg>headers</arg>
<arg>${headers}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:38.699" starttime="20170515 19:21:38.699"></status>
</kw>
<kw name="Log Request" library="rest_client">
<arguments>
<arg>method=Put</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>URI:</arg>
<arg>${AUTH_URI}</arg>
<arg>${kwargs["base_uri"]}</arg>
<arg>, method:</arg>
<arg>${kwargs["method"]}</arg>
<arg>, args:</arg>
<arg>${kwargs["args"]}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20170515 19:21:38.701" level="INFO">${msg} = URI:https://9.41.166.169/xyz/openbmc_project/state/host0//attr/RequestedHostTransition, method:Put, args:{u'data': {u'data': 'xyz.openbmc_project.State.Host.Transition.Off'}, u'headers': {u'Content-Ty...</msg>
<status status="PASS" endtime="20170515 19:21:38.701" starttime="20170515 19:21:38.700"></status>
</kw>
<kw name="Logging" library="rest_client">
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20170515 19:21:38.702" level="INFO">URI:https://9.41.166.169/xyz/openbmc_project/state/host0//attr/RequestedHostTransition, method:Put, args:{u'data': {u'data': 'xyz.openbmc_project.State.Host.Transition.Off'}, u'headers': {u'Content-Type': u'application/json'}}</msg>
<status status="PASS" endtime="20170515 19:21:38.702" starttime="20170515 19:21:38.702"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.703" starttime="20170515 19:21:38.701"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.703" starttime="20170515 19:21:38.700"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170515 19:21:38.916" level="INFO">Put Request using : alias=openbmc, uri=/xyz/openbmc_project/state/host0//attr/RequestedHostTransition, data={"data": "xyz.openbmc_project.State.Host.Transition.Off"},                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170515 19:21:38.916" level="INFO">${ret} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:38.916" starttime="20170515 19:21:38.703"></status>
</kw>
<kw name="Log Response" library="rest_client">
<arguments>
<arg>${ret}</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>Response code:</arg>
<arg>${resp.status_code}</arg>
<arg>, Content:</arg>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20170515 19:21:38.917" level="INFO">${msg} = Response code:200, Content:{
  "data": null, 
  "message": "200 OK", 
  "status": "ok"
}</msg>
<status status="PASS" endtime="20170515 19:21:38.917" starttime="20170515 19:21:38.917"></status>
</kw>
<kw name="Logging" library="rest_client">
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20170515 19:21:38.918" level="INFO">Response code:200, Content:{
  "data": null, 
  "message": "200 OK", 
  "status": "ok"
}</msg>
<status status="PASS" endtime="20170515 19:21:38.918" starttime="20170515 19:21:38.918"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.919" starttime="20170515 19:21:38.917"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.919" starttime="20170515 19:21:38.916"></status>
</kw>
<msg timestamp="20170515 19:21:38.919" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:38.919" starttime="20170515 19:21:38.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:38.920" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:38.920" starttime="20170515 19:21:38.919"></status>
</kw>
<kw name="To Json" library="RequestsLibrary.RequestsKeywords">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170515 19:21:38.920" level="INFO">To JSON using : content={
  "data": null, 
  "message": "200 OK", 
  "status": "ok"
} </msg>
<msg timestamp="20170515 19:21:38.920" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170515 19:21:38.921" level="INFO">${json} = {u'status': u'ok', u'message': u'200 OK', u'data': None}</msg>
<status status="PASS" endtime="20170515 19:21:38.921" starttime="20170515 19:21:38.920"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:38.921" starttime="20170515 19:21:38.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${wait}' == '${0}'</arg>
<arg>Return From Keyword</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:38.921" starttime="20170515 19:21:38.921"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>10 sec</arg>
<arg>Is Host Off</arg>
</arguments>
<kw name="Is Host Off" library="state_manager">
<doc>Check if host state is "Off".</doc>
<kw name="Get Host State" library="state_manager">
<doc>Return the state of the host as a string.</doc>
<assign>
<var>${host_state}</var>
</assign>
<kw name="Read Attribute" library="rest_client">
<arguments>
<arg>${HOST_STATE_URI}</arg>
<arg>CurrentHostState</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<kw name="OpenBMC Get Request" library="rest_client">
<arguments>
<arg>${uri}/attr/${attr}</arg>
<arg>timeout=${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:21:38.928" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:21:38.929" starttime="20170515 19:21:38.928"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:38.929" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:38.929" starttime="20170515 19:21:38.929"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:21:38.930" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:21:38.930" starttime="20170515 19:21:38.929"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:38.931" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:21:38.931" starttime="20170515 19:21:38.930"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.124" level="INFO">Post Request using : alias=openbmc, uri=/login, data={"data": ["root", "0penBmc"]}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<status status="PASS" endtime="20170515 19:21:39.124" starttime="20170515 19:21:38.932"></status>
</kw>
<msg timestamp="20170515 19:21:39.125" level="INFO">${status} = PASS</msg>
<msg timestamp="20170515 19:21:39.125" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.125" starttime="20170515 19:21:38.931"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.125" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.125" starttime="20170515 19:21:39.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.126" starttime="20170515 19:21:39.126"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.126" starttime="20170515 19:21:38.927"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.126" starttime="20170515 19:21:38.927"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.126" starttime="20170515 19:21:38.926"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:39.127" level="INFO">${base_uri} = /xyz/openbmc_project/state/host0//attr/CurrentHostState</msg>
<status status="PASS" endtime="20170515 19:21:39.127" starttime="20170515 19:21:39.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Request</arg>
<arg>method=Get</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:39.128" starttime="20170515 19:21:39.127"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170515 19:21:39.191" level="INFO">Get Request using : alias=openbmc, uri=/xyz/openbmc_project/state/host0//attr/CurrentHostState, headers=None </msg>
<msg timestamp="20170515 19:21:39.191" level="INFO">${ret} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.191" starttime="20170515 19:21:39.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Response</arg>
<arg>${ret}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:39.192" starttime="20170515 19:21:39.191"></status>
</kw>
<msg timestamp="20170515 19:21:39.192" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.192" starttime="20170515 19:21:38.923"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.192" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.192" starttime="20170515 19:21:39.192"></status>
</kw>
<kw name="To Json" library="RequestsLibrary.RequestsKeywords">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20170515 19:21:39.193" level="INFO">To JSON using : content={
  "data": "xyz.openbmc_project.State.Host.HostState.Off", 
  "message": "200 OK", 
  "status": "ok"
} </msg>
<msg timestamp="20170515 19:21:39.193" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170515 19:21:39.193" level="INFO">${content} = {u'status': u'ok', u'message': u'200 OK', u'data': u'xyz.openbmc_project.State.Host.HostState.Off'}</msg>
<status status="PASS" endtime="20170515 19:21:39.193" starttime="20170515 19:21:39.193"></status>
</kw>
<msg timestamp="20170515 19:21:39.193" level="INFO">${state} = xyz.openbmc_project.State.Host.HostState.Off</msg>
<status status="PASS" endtime="20170515 19:21:39.193" starttime="20170515 19:21:38.923"></status>
</kw>
<msg timestamp="20170515 19:21:39.194" level="INFO">${host_state} = Off</msg>
<status status="PASS" endtime="20170515 19:21:39.194" starttime="20170515 19:21:38.922"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>Off</arg>
<arg>${host_state}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:39.194" starttime="20170515 19:21:39.194"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.194" starttime="20170515 19:21:38.922"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.195" starttime="20170515 19:21:38.922"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.195" starttime="20170515 19:21:38.416"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.195" starttime="20170515 19:21:38.416"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.195" starttime="20170515 19:21:38.415"></status>
</kw>
<kw name="Set Policy Setting" library="code_update_utils">
<doc>Set the given test policy</doc>
<arguments>
<arg>RESTORE_LAST_STATE</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=${policy}</arg>
</arguments>
<assign>
<var>${valueDict}</var>
</assign>
<msg timestamp="20170515 19:21:39.196" level="INFO">${valueDict} = {u'data': u'RESTORE_LAST_STATE'}</msg>
<status status="PASS" endtime="20170515 19:21:39.196" starttime="20170515 19:21:39.195"></status>
</kw>
<kw name="Write Attribute" library="rest_client">
<arguments>
<arg>${HOST_SETTING}</arg>
<arg>power_policy</arg>
<arg>data=${valueDict}</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:39.197" level="INFO">${base_uri} = /org/openbmc/settings/host0</msg>
<status status="PASS" endtime="20170515 19:21:39.197" starttime="20170515 19:21:39.197"></status>
</kw>
<kw name="OpenBMC Put Request" library="rest_client">
<arguments>
<arg>${base_uri}/attr/${attr}</arg>
<arg>timeout=${timeout}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:21:39.200" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:21:39.201" starttime="20170515 19:21:39.200"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:39.201" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:39.201" starttime="20170515 19:21:39.201"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:21:39.202" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:21:39.202" starttime="20170515 19:21:39.202"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:39.203" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:21:39.203" starttime="20170515 19:21:39.202"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.521" level="INFO">Post Request using : alias=openbmc, uri=/login, data={"data": ["root", "0penBmc"]}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<status status="PASS" endtime="20170515 19:21:39.521" starttime="20170515 19:21:39.203"></status>
</kw>
<msg timestamp="20170515 19:21:39.521" level="INFO">${status} = PASS</msg>
<msg timestamp="20170515 19:21:39.521" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.521" starttime="20170515 19:21:39.203"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.522" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.522" starttime="20170515 19:21:39.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.522" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.523" starttime="20170515 19:21:39.522"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.523" starttime="20170515 19:21:39.199"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.523" starttime="20170515 19:21:39.199"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.523" starttime="20170515 19:21:39.198"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:39.523" level="INFO">${base_uri} = /org/openbmc/settings/host0/attr/power_policy</msg>
<status status="PASS" endtime="20170515 19:21:39.523" starttime="20170515 19:21:39.523"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:39.524" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:39.524" starttime="20170515 19:21:39.524"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${kwargs}</arg>
<arg>headers</arg>
<arg>${headers}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:39.525" starttime="20170515 19:21:39.524"></status>
</kw>
<kw name="Log Request" library="rest_client">
<arguments>
<arg>method=Put</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>URI:</arg>
<arg>${AUTH_URI}</arg>
<arg>${kwargs["base_uri"]}</arg>
<arg>, method:</arg>
<arg>${kwargs["method"]}</arg>
<arg>, args:</arg>
<arg>${kwargs["args"]}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20170515 19:21:39.526" level="INFO">${msg} = URI:https://9.41.166.169/org/openbmc/settings/host0/attr/power_policy, method:Put, args:{u'data': {u'data': u'RESTORE_LAST_STATE'}, u'headers': {u'Content-Type': u'application/json'}}</msg>
<status status="PASS" endtime="20170515 19:21:39.526" starttime="20170515 19:21:39.525"></status>
</kw>
<kw name="Logging" library="rest_client">
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20170515 19:21:39.527" level="INFO">URI:https://9.41.166.169/org/openbmc/settings/host0/attr/power_policy, method:Put, args:{u'data': {u'data': u'RESTORE_LAST_STATE'}, u'headers': {u'Content-Type': u'application/json'}}</msg>
<status status="PASS" endtime="20170515 19:21:39.527" starttime="20170515 19:21:39.527"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.527" starttime="20170515 19:21:39.526"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.528" starttime="20170515 19:21:39.525"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a PUT request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170515 19:21:39.714" level="INFO">Put Request using : alias=openbmc, uri=/org/openbmc/settings/host0/attr/power_policy, data={"data": "RESTORE_LAST_STATE"},                     headers={u'Content-Type': u'application/json'}, allow_redirects=True </msg>
<msg timestamp="20170515 19:21:39.714" level="INFO">${ret} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.714" starttime="20170515 19:21:39.528"></status>
</kw>
<kw name="Log Response" library="rest_client">
<arguments>
<arg>${ret}</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>Response code:</arg>
<arg>${resp.status_code}</arg>
<arg>, Content:</arg>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${msg}</var>
</assign>
<msg timestamp="20170515 19:21:39.716" level="INFO">${msg} = Response code:200, Content:{
  "data": null, 
  "message": "200 OK", 
  "status": "ok"
}</msg>
<status status="PASS" endtime="20170515 19:21:39.716" starttime="20170515 19:21:39.715"></status>
</kw>
<kw name="Logging" library="rest_client">
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${msg}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20170515 19:21:39.716" level="INFO">Response code:200, Content:{
  "data": null, 
  "message": "200 OK", 
  "status": "ok"
}</msg>
<status status="PASS" endtime="20170515 19:21:39.717" starttime="20170515 19:21:39.716"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.717" starttime="20170515 19:21:39.716"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.717" starttime="20170515 19:21:39.714"></status>
</kw>
<msg timestamp="20170515 19:21:39.717" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.717" starttime="20170515 19:21:39.197"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:39.718" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:39.718" starttime="20170515 19:21:39.717"></status>
</kw>
<kw name="To Json" library="RequestsLibrary.RequestsKeywords">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20170515 19:21:39.719" level="INFO">To JSON using : content={
  "data": null, 
  "message": "200 OK", 
  "status": "ok"
} </msg>
<msg timestamp="20170515 19:21:39.719" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170515 19:21:39.719" level="INFO">${json} = {u'status': u'ok', u'message': u'200 OK', u'data': None}</msg>
<status status="PASS" endtime="20170515 19:21:39.719" starttime="20170515 19:21:39.718"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:39.719" starttime="20170515 19:21:39.196"></status>
</kw>
<kw name="Read Attribute" library="rest_client">
<arguments>
<arg>${HOST_SETTING}</arg>
<arg>power_policy</arg>
</arguments>
<assign>
<var>${currentPolicy}</var>
</assign>
<kw name="OpenBMC Get Request" library="rest_client">
<arguments>
<arg>${uri}/attr/${attr}</arg>
<arg>timeout=${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:21:39.724" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:21:39.724" starttime="20170515 19:21:39.724"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:39.725" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:39.725" starttime="20170515 19:21:39.725"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:21:39.726" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:21:39.726" starttime="20170515 19:21:39.725"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:39.726" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:21:39.726" starttime="20170515 19:21:39.726"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.011" level="INFO">Post Request using : alias=openbmc, uri=/login, data={"data": ["root", "0penBmc"]}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<status status="PASS" endtime="20170515 19:21:40.011" starttime="20170515 19:21:39.727"></status>
</kw>
<msg timestamp="20170515 19:21:40.011" level="INFO">${status} = PASS</msg>
<msg timestamp="20170515 19:21:40.011" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.011" starttime="20170515 19:21:39.727"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.012" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.012" starttime="20170515 19:21:40.012"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.013" starttime="20170515 19:21:40.012"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.013" starttime="20170515 19:21:39.723"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.013" starttime="20170515 19:21:39.723"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.013" starttime="20170515 19:21:39.722"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:40.014" level="INFO">${base_uri} = /org/openbmc/settings/host0/attr/power_policy</msg>
<status status="PASS" endtime="20170515 19:21:40.014" starttime="20170515 19:21:40.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Request</arg>
<arg>method=Get</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:40.015" starttime="20170515 19:21:40.014"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170515 19:21:40.099" level="INFO">Get Request using : alias=openbmc, uri=/org/openbmc/settings/host0/attr/power_policy, headers=None </msg>
<msg timestamp="20170515 19:21:40.100" level="INFO">${ret} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.100" starttime="20170515 19:21:40.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Response</arg>
<arg>${ret}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:40.100" starttime="20170515 19:21:40.100"></status>
</kw>
<msg timestamp="20170515 19:21:40.100" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.100" starttime="20170515 19:21:39.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.101" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.101" starttime="20170515 19:21:40.101"></status>
</kw>
<kw name="To Json" library="RequestsLibrary.RequestsKeywords">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20170515 19:21:40.102" level="INFO">To JSON using : content={
  "data": "RESTORE_LAST_STATE", 
  "message": "200 OK", 
  "status": "ok"
} </msg>
<msg timestamp="20170515 19:21:40.102" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170515 19:21:40.102" level="INFO">${content} = {u'status': u'ok', u'message': u'200 OK', u'data': u'RESTORE_LAST_STATE'}</msg>
<status status="PASS" endtime="20170515 19:21:40.102" starttime="20170515 19:21:40.102"></status>
</kw>
<msg timestamp="20170515 19:21:40.102" level="INFO">${currentPolicy} = RESTORE_LAST_STATE</msg>
<status status="PASS" endtime="20170515 19:21:40.102" starttime="20170515 19:21:39.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${currentPolicy}</arg>
<arg>${policy}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:40.103" starttime="20170515 19:21:40.103"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.103" starttime="20170515 19:21:39.195"></status>
</kw>
<kw name="Prepare For Update" library="code_update_utils">
<doc>Switch to update mode in progress. This method calls</doc>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{EMPTY}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:40.104" level="INFO">${data} = {u'data': []}</msg>
<status status="PASS" endtime="20170515 19:21:40.104" starttime="20170515 19:21:40.104"></status>
</kw>
<kw name="OpenBMC Post Request" library="rest_client">
<arguments>
<arg>${BMC_PREP_METHOD}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:21:40.107" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:21:40.107" starttime="20170515 19:21:40.106"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:40.108" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:40.108" starttime="20170515 19:21:40.108"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:21:40.109" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:21:40.109" starttime="20170515 19:21:40.109"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:40.110" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:21:40.110" starttime="20170515 19:21:40.109"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.339" level="INFO">Post Request using : alias=openbmc, uri=/login, data={"data": ["root", "0penBmc"]}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<status status="PASS" endtime="20170515 19:21:40.339" starttime="20170515 19:21:40.111"></status>
</kw>
<msg timestamp="20170515 19:21:40.339" level="INFO">${status} = PASS</msg>
<msg timestamp="20170515 19:21:40.339" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.339" starttime="20170515 19:21:40.111"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.340" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.340" starttime="20170515 19:21:40.340"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.341" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.341" starttime="20170515 19:21:40.340"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.341" starttime="20170515 19:21:40.106"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.341" starttime="20170515 19:21:40.105"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:40.341" starttime="20170515 19:21:40.105"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:21:40.342" level="INFO">${base_uri} = /org/openbmc/control/flash/bmc/action/PrepareForUpdate</msg>
<status status="PASS" endtime="20170515 19:21:40.342" starttime="20170515 19:21:40.342"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:40.343" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:40.343" starttime="20170515 19:21:40.342"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${kwargs}</arg>
<arg>headers</arg>
<arg>${headers}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:40.343" starttime="20170515 19:21:40.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Request</arg>
<arg>method=Post</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:40.344" starttime="20170515 19:21:40.343"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170515 19:21:40.741" level="INFO">Post Request using : alias=openbmc, uri=/org/openbmc/control/flash/bmc/action/PrepareForUpdate, data={"data": []}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20170515 19:21:40.741" level="INFO">${ret} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.742" starttime="20170515 19:21:40.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Response</arg>
<arg>${ret}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:40.742" starttime="20170515 19:21:40.742"></status>
</kw>
<msg timestamp="20170515 19:21:40.743" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.743" starttime="20170515 19:21:40.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:21:40.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170515 19:21:40.743" starttime="20170515 19:21:40.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20170515 19:21:50.744" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20170515 19:21:50.744" starttime="20170515 19:21:40.744"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:50.744" starttime="20170515 19:21:40.103"></status>
</kw>
<kw name="Check If BMC is Up" library="utils">
<doc>Wait for Host to be online. Checks every X seconds</doc>
<arguments>
<arg>20 min</arg>
<arg>10 sec</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${max_timeout}</arg>
<arg>${interval}</arg>
<arg>Verify Ping and REST Authentication</arg>
</arguments>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:21:50.747" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:21:50.748" starttime="20170515 19:21:50.747"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:21:50.754" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:21:53.764" level="INFO">${RC} = 0</msg>
<msg timestamp="20170515 19:21:53.764" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
64 bytes from 9.41.166.169: icmp_seq=1 ttl=63 time=0.840 ms
64 bytes from 9.41.166.169: icmp_seq=2 ttl=63 time=8.67 ms
64 bytes from 9.41.166.169...</msg>
<status status="PASS" endtime="20170515 19:21:53.764" starttime="20170515 19:21:50.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:21:53.773" level="INFO">RC: 0
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
64 bytes from 9.41.166.169: icmp_seq=1 ttl=63 time=0.840 ms
64 bytes from 9.41.166.169: icmp_seq=2 ttl=63 time=8.67 ms
64 bytes from 9.41.166.169: icmp_seq=3 ttl=63 time=1.10 ms
64 bytes from 9.41.166.169: icmp_seq=4 ttl=63 time=1.34 ms

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3003ms
rtt min/avg/max/mdev = 0.840/2.989/8.670/3.285 ms</msg>
<status status="PASS" endtime="20170515 19:21:53.773" starttime="20170515 19:21:53.772"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:53.774" starttime="20170515 19:21:53.773"></status>
</kw>
<status status="PASS" endtime="20170515 19:21:53.774" starttime="20170515 19:21:50.747"></status>
</kw>
<msg timestamp="20170515 19:21:53.774" level="INFO">${l_ping} = True</msg>
<status status="PASS" endtime="20170515 19:21:53.774" starttime="20170515 19:21:50.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<status status="PASS" endtime="20170515 19:21:53.775" starttime="20170515 19:21:53.775"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Initialize OpenBMC</arg>
</arguments>
<assign>
<var>${l_rest}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:21:53.778" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=20, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:21:53.780" starttime="20170515 19:21:53.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:21:53.780" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:21:53.780" starttime="20170515 19:21:53.780"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:21:53.781" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:21:53.781" starttime="20170515 19:21:53.781"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:21:53.782" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:21:53.782" starttime="20170515 19:21:53.781"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:21:53.883" level="FAIL">ConnectionError: ('Connection aborted.', error(104, 'Connection reset by peer'))</msg>
<status status="FAIL" endtime="20170515 19:21:53.884" starttime="20170515 19:21:53.783"></status>
</kw>
<msg timestamp="20170515 19:21:53.884" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170515 19:21:53.884" level="INFO">${resp} = ConnectionError: ('Connection aborted.', error(104, 'Connection reset by peer'))</msg>
<status status="PASS" endtime="20170515 19:21:53.884" starttime="20170515 19:21:53.782"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:21:53.884" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170515 19:21:53.885" level="FAIL">ConnectionError: ('Connection aborted.', error(104, 'Connection reset by peer')): FAIL != PASS</msg>
<status status="FAIL" endtime="20170515 19:21:53.885" starttime="20170515 19:21:53.884"></status>
</kw>
<status status="FAIL" endtime="20170515 19:21:53.885" starttime="20170515 19:21:53.777"></status>
</kw>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:22:13.887" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=20, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:22:13.888" starttime="20170515 19:22:13.887"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:22:13.888" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:22:13.888" starttime="20170515 19:22:13.888"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:22:13.889" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:22:13.889" starttime="20170515 19:22:13.889"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:22:13.890" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:22:13.890" starttime="20170515 19:22:13.889"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:22:40.915" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e79fed0&gt;: Failed to establish a new connection: [Errno 113] No route to host',))</msg>
<status status="FAIL" endtime="20170515 19:22:40.915" starttime="20170515 19:22:13.890"></status>
</kw>
<msg timestamp="20170515 19:22:40.915" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170515 19:22:40.915" level="INFO">${resp} = ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection ...</msg>
<status status="PASS" endtime="20170515 19:22:40.915" starttime="20170515 19:22:13.890"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:22:40.916" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170515 19:22:40.916" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e79fed0&gt;: Failed to establish a new connection: [Errno 113] No route to host',)): FAIL != PASS</msg>
<status status="FAIL" endtime="20170515 19:22:40.916" starttime="20170515 19:22:40.916"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:40.917" starttime="20170515 19:22:13.886"></status>
</kw>
<msg timestamp="20170515 19:22:40.917" level="FAIL">Keyword 'Post Login Request' failed after retrying for 40 seconds. The last error was: ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e79fed0&gt;: Failed to establish a new connection: [Errno 113] No route to host',)): FAIL != PASS</msg>
<status status="FAIL" endtime="20170515 19:22:40.917" starttime="20170515 19:21:53.776"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:40.917" starttime="20170515 19:21:53.776"></status>
</kw>
<msg timestamp="20170515 19:22:40.917" level="INFO">${l_rest} = False</msg>
<status status="PASS" endtime="20170515 19:22:40.917" starttime="20170515 19:21:53.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_rest}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=REST Authentication Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=REST Authentication Failed</arg>
</arguments>
<msg timestamp="20170515 19:22:40.918" level="FAIL">REST Authentication Failed</msg>
<status status="FAIL" endtime="20170515 19:22:40.918" starttime="20170515 19:22:40.918"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:40.918" starttime="20170515 19:22:40.917"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:40.919" starttime="20170515 19:21:50.746"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:22:50.921" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:22:50.921" starttime="20170515 19:22:50.921"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:22:50.927" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:22:56.944" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:22:56.944" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:22:56.944" starttime="20170515 19:22:50.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:22:56.948" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:22:56.948" starttime="20170515 19:22:56.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:22:56.950" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:22:56.950" starttime="20170515 19:22:56.948"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:56.950" starttime="20170515 19:22:50.920"></status>
</kw>
<msg timestamp="20170515 19:22:56.951" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:22:56.951" starttime="20170515 19:22:50.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:22:56.952" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:22:56.952" starttime="20170515 19:22:56.952"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:56.952" starttime="20170515 19:22:56.951"></status>
</kw>
<status status="FAIL" endtime="20170515 19:22:56.952" starttime="20170515 19:22:50.919"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:23:06.955" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:23:06.955" starttime="20170515 19:23:06.955"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:23:06.966" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:23:12.982" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:23:12.982" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:23:12.983" starttime="20170515 19:23:06.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:23:13.000" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:23:13.000" starttime="20170515 19:23:12.997"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:23:13.002" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:23:13.002" starttime="20170515 19:23:13.000"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:13.004" starttime="20170515 19:23:06.954"></status>
</kw>
<msg timestamp="20170515 19:23:13.005" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:23:13.005" starttime="20170515 19:23:06.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:23:13.007" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:23:13.007" starttime="20170515 19:23:13.007"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:13.007" starttime="20170515 19:23:13.006"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:13.008" starttime="20170515 19:23:06.953"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:23:23.010" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:23:23.010" starttime="20170515 19:23:23.010"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:23:23.014" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:23:29.032" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:23:29.032" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:23:29.032" starttime="20170515 19:23:23.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:23:29.036" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:23:29.036" starttime="20170515 19:23:29.035"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:23:29.037" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:23:29.037" starttime="20170515 19:23:29.036"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:29.037" starttime="20170515 19:23:23.009"></status>
</kw>
<msg timestamp="20170515 19:23:29.037" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:23:29.037" starttime="20170515 19:23:23.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:23:29.039" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:23:29.039" starttime="20170515 19:23:29.038"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:29.039" starttime="20170515 19:23:29.038"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:29.039" starttime="20170515 19:23:23.008"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:23:39.044" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:23:39.044" starttime="20170515 19:23:39.044"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:23:39.053" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:23:45.064" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:23:45.064" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:23:45.064" starttime="20170515 19:23:39.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:23:45.068" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3013ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:23:45.068" starttime="20170515 19:23:45.067"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:23:45.069" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:23:45.069" starttime="20170515 19:23:45.068"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:45.069" starttime="20170515 19:23:39.043"></status>
</kw>
<msg timestamp="20170515 19:23:45.069" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:23:45.069" starttime="20170515 19:23:39.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:23:45.071" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:23:45.071" starttime="20170515 19:23:45.070"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:45.071" starttime="20170515 19:23:45.070"></status>
</kw>
<status status="FAIL" endtime="20170515 19:23:45.072" starttime="20170515 19:23:39.041"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:23:55.075" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:23:55.075" starttime="20170515 19:23:55.074"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:23:55.078" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:24:01.097" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:24:01.097" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:24:01.097" starttime="20170515 19:23:55.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:24:01.101" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:24:01.101" starttime="20170515 19:24:01.100"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:24:01.102" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:24:01.102" starttime="20170515 19:24:01.101"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:01.102" starttime="20170515 19:23:55.074"></status>
</kw>
<msg timestamp="20170515 19:24:01.103" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:24:01.103" starttime="20170515 19:23:55.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:24:01.104" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:24:01.104" starttime="20170515 19:24:01.104"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:01.104" starttime="20170515 19:24:01.103"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:01.104" starttime="20170515 19:23:55.073"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:24:11.107" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:24:11.107" starttime="20170515 19:24:11.107"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:24:11.118" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:24:17.112" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:24:17.112" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:24:17.112" starttime="20170515 19:24:11.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:24:17.115" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:24:17.116" starttime="20170515 19:24:17.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:24:17.117" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:24:17.117" starttime="20170515 19:24:17.116"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:17.117" starttime="20170515 19:24:11.107"></status>
</kw>
<msg timestamp="20170515 19:24:17.117" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:24:17.117" starttime="20170515 19:24:11.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:24:17.118" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:24:17.118" starttime="20170515 19:24:17.118"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:17.119" starttime="20170515 19:24:17.118"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:17.119" starttime="20170515 19:24:11.105"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:24:27.121" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:24:27.121" starttime="20170515 19:24:27.121"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:24:27.125" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:24:33.133" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:24:33.133" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:24:33.134" starttime="20170515 19:24:27.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:24:33.149" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:24:33.149" starttime="20170515 19:24:33.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:24:33.152" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:24:33.152" starttime="20170515 19:24:33.150"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:33.153" starttime="20170515 19:24:27.120"></status>
</kw>
<msg timestamp="20170515 19:24:33.153" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:24:33.153" starttime="20170515 19:24:27.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:24:33.155" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:24:33.155" starttime="20170515 19:24:33.155"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:33.155" starttime="20170515 19:24:33.154"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:33.156" starttime="20170515 19:24:27.119"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:24:43.160" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:24:43.160" starttime="20170515 19:24:43.160"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:24:43.176" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:24:49.168" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:24:49.168" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:24:49.168" starttime="20170515 19:24:43.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:24:49.171" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3000ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:24:49.172" starttime="20170515 19:24:49.171"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:24:49.172" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:24:49.173" starttime="20170515 19:24:49.172"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:49.173" starttime="20170515 19:24:43.159"></status>
</kw>
<msg timestamp="20170515 19:24:49.173" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:24:49.173" starttime="20170515 19:24:43.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:24:49.174" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:24:49.175" starttime="20170515 19:24:49.174"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:49.175" starttime="20170515 19:24:49.173"></status>
</kw>
<status status="FAIL" endtime="20170515 19:24:49.175" starttime="20170515 19:24:43.156"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:24:59.178" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:24:59.178" starttime="20170515 19:24:59.177"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:24:59.181" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:25:05.200" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:25:05.200" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:25:05.201" starttime="20170515 19:24:59.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:25:05.204" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:25:05.204" starttime="20170515 19:25:05.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:25:05.206" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:25:05.206" starttime="20170515 19:25:05.205"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:05.206" starttime="20170515 19:24:59.177"></status>
</kw>
<msg timestamp="20170515 19:25:05.206" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:25:05.206" starttime="20170515 19:24:59.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:25:05.207" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:25:05.207" starttime="20170515 19:25:05.207"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:05.207" starttime="20170515 19:25:05.206"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:05.208" starttime="20170515 19:24:59.175"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:25:15.211" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:25:15.211" starttime="20170515 19:25:15.210"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:25:15.215" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:25:21.232" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:25:21.232" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:25:21.232" starttime="20170515 19:25:15.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:25:21.236" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:25:21.236" starttime="20170515 19:25:21.235"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:25:21.237" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:25:21.237" starttime="20170515 19:25:21.236"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:21.237" starttime="20170515 19:25:15.210"></status>
</kw>
<msg timestamp="20170515 19:25:21.237" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:25:21.237" starttime="20170515 19:25:15.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:25:21.239" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:25:21.239" starttime="20170515 19:25:21.238"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:21.239" starttime="20170515 19:25:21.238"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:21.239" starttime="20170515 19:25:15.208"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:25:31.242" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:25:31.244" starttime="20170515 19:25:31.242"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:25:31.254" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:25:37.252" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:25:37.252" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:25:37.255" starttime="20170515 19:25:31.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:25:37.258" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3000ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:25:37.258" starttime="20170515 19:25:37.257"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:25:37.259" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:25:37.259" starttime="20170515 19:25:37.259"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:37.260" starttime="20170515 19:25:31.241"></status>
</kw>
<msg timestamp="20170515 19:25:37.260" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:25:37.260" starttime="20170515 19:25:31.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:25:37.261" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:25:37.261" starttime="20170515 19:25:37.261"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:37.261" starttime="20170515 19:25:37.260"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:37.262" starttime="20170515 19:25:31.240"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:25:47.265" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:25:47.265" starttime="20170515 19:25:47.264"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:25:47.268" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:25:53.284" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:25:53.284" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:25:53.284" starttime="20170515 19:25:47.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:25:53.288" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3013ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:25:53.288" starttime="20170515 19:25:53.287"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:25:53.289" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:25:53.289" starttime="20170515 19:25:53.288"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:53.290" starttime="20170515 19:25:47.264"></status>
</kw>
<msg timestamp="20170515 19:25:53.290" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:25:53.290" starttime="20170515 19:25:47.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:25:53.291" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:25:53.291" starttime="20170515 19:25:53.291"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:53.291" starttime="20170515 19:25:53.290"></status>
</kw>
<status status="FAIL" endtime="20170515 19:25:53.292" starttime="20170515 19:25:47.262"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:26:03.295" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:26:03.295" starttime="20170515 19:26:03.294"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:26:03.303" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:26:09.316" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:26:09.316" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:26:09.316" starttime="20170515 19:26:03.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:26:09.319" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:26:09.320" starttime="20170515 19:26:09.319"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:26:09.321" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:26:09.321" starttime="20170515 19:26:09.320"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:09.321" starttime="20170515 19:26:03.294"></status>
</kw>
<msg timestamp="20170515 19:26:09.321" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:26:09.321" starttime="20170515 19:26:03.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:26:09.323" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:26:09.323" starttime="20170515 19:26:09.322"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:09.323" starttime="20170515 19:26:09.322"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:09.323" starttime="20170515 19:26:03.292"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:26:19.326" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:26:19.326" starttime="20170515 19:26:19.325"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:26:19.329" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:26:25.332" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:26:25.332" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:26:25.332" starttime="20170515 19:26:19.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:26:25.335" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:26:25.336" starttime="20170515 19:26:25.335"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:26:25.338" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:26:25.338" starttime="20170515 19:26:25.336"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:25.338" starttime="20170515 19:26:19.325"></status>
</kw>
<msg timestamp="20170515 19:26:25.338" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:26:25.338" starttime="20170515 19:26:19.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:26:25.339" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:26:25.339" starttime="20170515 19:26:25.339"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:25.339" starttime="20170515 19:26:25.338"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:25.340" starttime="20170515 19:26:19.324"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:26:35.342" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:26:35.343" starttime="20170515 19:26:35.342"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:26:35.346" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:26:41.364" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:26:41.364" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:26:41.364" starttime="20170515 19:26:35.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:26:41.368" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:26:41.368" starttime="20170515 19:26:41.367"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:26:41.369" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:26:41.369" starttime="20170515 19:26:41.368"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:41.369" starttime="20170515 19:26:35.342"></status>
</kw>
<msg timestamp="20170515 19:26:41.369" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:26:41.370" starttime="20170515 19:26:35.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:26:41.371" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:26:41.371" starttime="20170515 19:26:41.371"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:41.371" starttime="20170515 19:26:41.370"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:41.371" starttime="20170515 19:26:35.340"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:26:51.374" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:26:51.374" starttime="20170515 19:26:51.373"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:26:51.377" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:26:57.380" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:26:57.380" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:26:57.380" starttime="20170515 19:26:51.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:26:57.383" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:26:57.384" starttime="20170515 19:26:57.383"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:26:57.385" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:26:57.385" starttime="20170515 19:26:57.384"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:57.385" starttime="20170515 19:26:51.373"></status>
</kw>
<msg timestamp="20170515 19:26:57.385" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:26:57.385" starttime="20170515 19:26:51.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:26:57.387" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:26:57.387" starttime="20170515 19:26:57.386"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:57.387" starttime="20170515 19:26:57.386"></status>
</kw>
<status status="FAIL" endtime="20170515 19:26:57.387" starttime="20170515 19:26:51.372"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:27:07.390" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:27:07.390" starttime="20170515 19:27:07.389"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:27:07.393" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:27:13.401" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:27:13.402" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:27:13.403" starttime="20170515 19:27:07.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:27:13.408" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:27:13.408" starttime="20170515 19:27:13.408"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:27:13.409" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:27:13.409" starttime="20170515 19:27:13.409"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:13.410" starttime="20170515 19:27:07.389"></status>
</kw>
<msg timestamp="20170515 19:27:13.410" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:27:13.410" starttime="20170515 19:27:07.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:27:13.411" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:27:13.411" starttime="20170515 19:27:13.411"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:13.411" starttime="20170515 19:27:13.410"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:13.412" starttime="20170515 19:27:07.387"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:27:23.416" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:27:23.416" starttime="20170515 19:27:23.415"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:27:23.425" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:27:29.420" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:27:29.420" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:27:29.420" starttime="20170515 19:27:23.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:27:29.424" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:27:29.424" starttime="20170515 19:27:29.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:27:29.425" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:27:29.425" starttime="20170515 19:27:29.424"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:29.425" starttime="20170515 19:27:23.415"></status>
</kw>
<msg timestamp="20170515 19:27:29.425" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:27:29.425" starttime="20170515 19:27:23.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:27:29.427" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:27:29.427" starttime="20170515 19:27:29.426"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:29.427" starttime="20170515 19:27:29.426"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:29.427" starttime="20170515 19:27:23.413"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:27:39.430" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:27:39.430" starttime="20170515 19:27:39.430"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:27:39.439" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:27:45.452" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:27:45.452" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:27:45.452" starttime="20170515 19:27:39.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:27:45.456" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:27:45.456" starttime="20170515 19:27:45.455"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:27:45.457" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:27:45.457" starttime="20170515 19:27:45.456"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:45.457" starttime="20170515 19:27:39.429"></status>
</kw>
<msg timestamp="20170515 19:27:45.457" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:27:45.457" starttime="20170515 19:27:39.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:27:45.459" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:27:45.459" starttime="20170515 19:27:45.459"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:45.459" starttime="20170515 19:27:45.458"></status>
</kw>
<status status="FAIL" endtime="20170515 19:27:45.459" starttime="20170515 19:27:39.427"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:27:55.462" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:27:55.462" starttime="20170515 19:27:55.462"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:27:55.466" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:28:01.484" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:28:01.484" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:28:01.484" starttime="20170515 19:27:55.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:28:01.488" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:28:01.488" starttime="20170515 19:28:01.487"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:28:01.489" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:28:01.489" starttime="20170515 19:28:01.488"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:01.489" starttime="20170515 19:27:55.461"></status>
</kw>
<msg timestamp="20170515 19:28:01.490" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:28:01.490" starttime="20170515 19:27:55.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:28:01.491" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:28:01.491" starttime="20170515 19:28:01.491"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:01.491" starttime="20170515 19:28:01.490"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:01.491" starttime="20170515 19:27:55.460"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:28:11.498" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:28:11.498" starttime="20170515 19:28:11.497"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:28:11.501" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:28:17.526" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:28:17.526" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:28:17.527" starttime="20170515 19:28:11.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:28:17.542" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3016ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:28:17.542" starttime="20170515 19:28:17.540"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:28:17.545" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:28:17.545" starttime="20170515 19:28:17.543"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:17.546" starttime="20170515 19:28:11.497"></status>
</kw>
<msg timestamp="20170515 19:28:17.546" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:28:17.547" starttime="20170515 19:28:11.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:28:17.549" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:28:17.549" starttime="20170515 19:28:17.549"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:17.549" starttime="20170515 19:28:17.547"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:17.549" starttime="20170515 19:28:11.492"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:28:27.553" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:28:27.553" starttime="20170515 19:28:27.553"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:28:27.557" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:28:33.560" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:28:33.560" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:28:33.560" starttime="20170515 19:28:27.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:28:33.564" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:28:33.564" starttime="20170515 19:28:33.563"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:28:33.565" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:28:33.565" starttime="20170515 19:28:33.564"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:33.566" starttime="20170515 19:28:27.551"></status>
</kw>
<msg timestamp="20170515 19:28:33.566" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:28:33.566" starttime="20170515 19:28:27.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:28:33.567" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:28:33.567" starttime="20170515 19:28:33.567"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:33.567" starttime="20170515 19:28:33.566"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:33.567" starttime="20170515 19:28:27.550"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:28:43.571" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:28:43.571" starttime="20170515 19:28:43.570"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:28:43.574" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:28:49.592" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:28:49.592" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:28:49.592" starttime="20170515 19:28:43.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:28:49.596" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:28:49.596" starttime="20170515 19:28:49.595"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:28:49.597" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:28:49.597" starttime="20170515 19:28:49.596"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:49.597" starttime="20170515 19:28:43.570"></status>
</kw>
<msg timestamp="20170515 19:28:49.598" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:28:49.598" starttime="20170515 19:28:43.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:28:49.599" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:28:49.599" starttime="20170515 19:28:49.599"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:49.599" starttime="20170515 19:28:49.598"></status>
</kw>
<status status="FAIL" endtime="20170515 19:28:49.599" starttime="20170515 19:28:43.568"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:28:59.603" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:28:59.603" starttime="20170515 19:28:59.602"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:28:59.613" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:29:05.624" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:29:05.624" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:29:05.624" starttime="20170515 19:28:59.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:29:05.628" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:29:05.628" starttime="20170515 19:29:05.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:29:05.629" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:29:05.629" starttime="20170515 19:29:05.628"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:05.629" starttime="20170515 19:28:59.602"></status>
</kw>
<msg timestamp="20170515 19:29:05.629" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:29:05.629" starttime="20170515 19:28:59.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:29:05.631" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:29:05.631" starttime="20170515 19:29:05.631"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:05.631" starttime="20170515 19:29:05.630"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:05.631" starttime="20170515 19:28:59.600"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:29:15.634" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:29:15.634" starttime="20170515 19:29:15.634"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:29:15.638" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:29:21.660" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:29:21.661" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:29:21.662" starttime="20170515 19:29:15.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:29:21.679" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:29:21.679" starttime="20170515 19:29:21.676"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:29:21.681" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:29:21.682" starttime="20170515 19:29:21.680"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:21.683" starttime="20170515 19:29:15.633"></status>
</kw>
<msg timestamp="20170515 19:29:21.684" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:29:21.684" starttime="20170515 19:29:15.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:29:21.687" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:29:21.687" starttime="20170515 19:29:21.686"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:21.687" starttime="20170515 19:29:21.685"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:21.687" starttime="20170515 19:29:15.632"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:29:31.689" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:29:31.690" starttime="20170515 19:29:31.689"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:29:31.693" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:29:37.696" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:29:37.696" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:29:37.696" starttime="20170515 19:29:31.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:29:37.700" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:29:37.700" starttime="20170515 19:29:37.699"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:29:37.701" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:29:37.701" starttime="20170515 19:29:37.700"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:37.701" starttime="20170515 19:29:31.689"></status>
</kw>
<msg timestamp="20170515 19:29:37.702" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:29:37.702" starttime="20170515 19:29:31.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:29:37.703" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:29:37.703" starttime="20170515 19:29:37.703"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:37.703" starttime="20170515 19:29:37.702"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:37.704" starttime="20170515 19:29:31.688"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:29:47.707" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:29:47.707" starttime="20170515 19:29:47.706"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:29:47.711" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:29:53.716" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:29:53.716" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:29:53.716" starttime="20170515 19:29:47.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:29:53.719" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3000ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:29:53.719" starttime="20170515 19:29:53.719"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:29:53.720" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:29:53.720" starttime="20170515 19:29:53.720"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:53.721" starttime="20170515 19:29:47.706"></status>
</kw>
<msg timestamp="20170515 19:29:53.721" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:29:53.721" starttime="20170515 19:29:47.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:29:53.722" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:29:53.723" starttime="20170515 19:29:53.722"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:53.723" starttime="20170515 19:29:53.721"></status>
</kw>
<status status="FAIL" endtime="20170515 19:29:53.723" starttime="20170515 19:29:47.704"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:30:03.726" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:30:03.726" starttime="20170515 19:30:03.726"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:30:03.730" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:30:09.753" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:30:09.754" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:30:09.755" starttime="20170515 19:30:03.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:30:09.770" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3016ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:30:09.771" starttime="20170515 19:30:09.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:30:09.773" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:30:09.773" starttime="20170515 19:30:09.771"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:09.774" starttime="20170515 19:30:03.725"></status>
</kw>
<msg timestamp="20170515 19:30:09.775" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:30:09.775" starttime="20170515 19:30:03.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:30:09.779" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:30:09.779" starttime="20170515 19:30:09.778"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:09.779" starttime="20170515 19:30:09.775"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:09.779" starttime="20170515 19:30:03.724"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:30:19.782" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:30:19.782" starttime="20170515 19:30:19.781"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:30:19.786" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:30:25.788" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:30:25.788" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:30:25.788" starttime="20170515 19:30:19.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:30:25.791" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:30:25.791" starttime="20170515 19:30:25.790"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:30:25.792" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:30:25.793" starttime="20170515 19:30:25.792"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:25.793" starttime="20170515 19:30:19.781"></status>
</kw>
<msg timestamp="20170515 19:30:25.793" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:30:25.793" starttime="20170515 19:30:19.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:30:25.795" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:30:25.795" starttime="20170515 19:30:25.794"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:25.795" starttime="20170515 19:30:25.794"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:25.795" starttime="20170515 19:30:19.779"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:30:35.798" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:30:35.798" starttime="20170515 19:30:35.797"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:30:35.801" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:30:41.820" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:30:41.820" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:30:41.820" starttime="20170515 19:30:35.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:30:41.824" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:30:41.824" starttime="20170515 19:30:41.823"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:30:41.825" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:30:41.825" starttime="20170515 19:30:41.824"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:41.825" starttime="20170515 19:30:35.797"></status>
</kw>
<msg timestamp="20170515 19:30:41.825" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:30:41.825" starttime="20170515 19:30:35.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:30:41.827" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:30:41.827" starttime="20170515 19:30:41.827"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:41.827" starttime="20170515 19:30:41.826"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:41.827" starttime="20170515 19:30:35.795"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:30:51.831" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:30:51.831" starttime="20170515 19:30:51.830"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:30:51.834" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:30:57.852" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:30:57.852" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:30:57.852" starttime="20170515 19:30:51.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:30:57.856" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:30:57.856" starttime="20170515 19:30:57.855"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:30:57.857" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:30:57.857" starttime="20170515 19:30:57.857"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:57.858" starttime="20170515 19:30:51.830"></status>
</kw>
<msg timestamp="20170515 19:30:57.858" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:30:57.858" starttime="20170515 19:30:51.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:30:57.859" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:30:57.859" starttime="20170515 19:30:57.859"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:57.860" starttime="20170515 19:30:57.858"></status>
</kw>
<status status="FAIL" endtime="20170515 19:30:57.860" starttime="20170515 19:30:51.828"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:31:07.864" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:31:07.864" starttime="20170515 19:31:07.864"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:31:07.869" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:31:13.868" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:31:13.868" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:31:13.868" starttime="20170515 19:31:07.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:31:13.872" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:31:13.872" starttime="20170515 19:31:13.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:31:13.873" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:31:13.873" starttime="20170515 19:31:13.872"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:13.873" starttime="20170515 19:31:07.863"></status>
</kw>
<msg timestamp="20170515 19:31:13.873" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:31:13.873" starttime="20170515 19:31:07.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:31:13.875" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:31:13.875" starttime="20170515 19:31:13.875"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:13.875" starttime="20170515 19:31:13.874"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:13.875" starttime="20170515 19:31:07.861"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:31:23.878" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:31:23.879" starttime="20170515 19:31:23.878"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:31:23.889" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:31:29.906" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:31:29.907" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:31:29.907" starttime="20170515 19:31:23.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:31:29.924" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:31:29.924" starttime="20170515 19:31:29.922"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:31:29.928" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:31:29.928" starttime="20170515 19:31:29.925"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:29.930" starttime="20170515 19:31:23.878"></status>
</kw>
<msg timestamp="20170515 19:31:29.930" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:31:29.930" starttime="20170515 19:31:23.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:31:29.932" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:31:29.933" starttime="20170515 19:31:29.932"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:29.933" starttime="20170515 19:31:29.931"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:29.933" starttime="20170515 19:31:23.876"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:31:39.937" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:31:39.937" starttime="20170515 19:31:39.937"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:31:39.944" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:31:45.964" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:31:45.965" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:31:45.966" starttime="20170515 19:31:39.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:31:45.982" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:31:45.982" starttime="20170515 19:31:45.980"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:31:45.984" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:31:45.984" starttime="20170515 19:31:45.982"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:45.984" starttime="20170515 19:31:39.935"></status>
</kw>
<msg timestamp="20170515 19:31:45.986" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:31:45.986" starttime="20170515 19:31:39.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:31:45.988" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:31:45.988" starttime="20170515 19:31:45.988"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:45.988" starttime="20170515 19:31:45.986"></status>
</kw>
<status status="FAIL" endtime="20170515 19:31:45.988" starttime="20170515 19:31:39.934"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:31:55.992" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:31:55.992" starttime="20170515 19:31:55.992"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:31:56.005" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:32:02.004" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:32:02.004" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:32:02.005" starttime="20170515 19:31:55.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:32:02.021" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:32:02.021" starttime="20170515 19:32:02.018"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:32:02.023" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:32:02.023" starttime="20170515 19:32:02.022"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:02.024" starttime="20170515 19:31:55.992"></status>
</kw>
<msg timestamp="20170515 19:32:02.025" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:32:02.025" starttime="20170515 19:31:55.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:32:02.028" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:32:02.028" starttime="20170515 19:32:02.028"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:02.028" starttime="20170515 19:32:02.026"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:02.029" starttime="20170515 19:31:55.989"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:32:12.032" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:32:12.032" starttime="20170515 19:32:12.031"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:32:12.042" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:32:18.053" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:32:18.054" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:32:18.054" starttime="20170515 19:32:12.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:32:18.057" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:32:18.057" starttime="20170515 19:32:18.056"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:32:18.058" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:32:18.058" starttime="20170515 19:32:18.057"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:18.059" starttime="20170515 19:32:12.031"></status>
</kw>
<msg timestamp="20170515 19:32:18.059" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:32:18.059" starttime="20170515 19:32:12.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:32:18.060" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:32:18.060" starttime="20170515 19:32:18.060"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:18.060" starttime="20170515 19:32:18.059"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:18.061" starttime="20170515 19:32:12.029"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:32:28.063" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:32:28.064" starttime="20170515 19:32:28.063"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:32:28.067" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:32:34.089" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:32:34.090" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:32:34.091" starttime="20170515 19:32:28.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:32:34.108" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:32:34.108" starttime="20170515 19:32:34.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:32:34.110" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:32:34.110" starttime="20170515 19:32:34.108"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:34.111" starttime="20170515 19:32:28.063"></status>
</kw>
<msg timestamp="20170515 19:32:34.112" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:32:34.112" starttime="20170515 19:32:28.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:32:34.115" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:32:34.117" starttime="20170515 19:32:34.114"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:34.117" starttime="20170515 19:32:34.113"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:34.118" starttime="20170515 19:32:28.061"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:32:44.123" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:32:44.123" starttime="20170515 19:32:44.122"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:32:44.129" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:32:50.144" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:32:50.145" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:32:50.145" starttime="20170515 19:32:44.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:32:50.148" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:32:50.148" starttime="20170515 19:32:50.147"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:32:50.149" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:32:50.150" starttime="20170515 19:32:50.149"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:50.150" starttime="20170515 19:32:44.122"></status>
</kw>
<msg timestamp="20170515 19:32:50.150" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:32:50.150" starttime="20170515 19:32:44.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:32:50.152" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:32:50.152" starttime="20170515 19:32:50.151"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:50.152" starttime="20170515 19:32:50.151"></status>
</kw>
<status status="FAIL" endtime="20170515 19:32:50.152" starttime="20170515 19:32:44.119"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:33:00.155" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:33:00.155" starttime="20170515 19:33:00.155"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:33:00.160" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:33:06.176" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:33:06.176" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:33:06.176" starttime="20170515 19:33:00.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:33:06.179" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:33:06.179" starttime="20170515 19:33:06.178"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:33:06.180" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:33:06.180" starttime="20170515 19:33:06.180"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:06.181" starttime="20170515 19:33:00.154"></status>
</kw>
<msg timestamp="20170515 19:33:06.181" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:33:06.181" starttime="20170515 19:33:00.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:33:06.182" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:33:06.182" starttime="20170515 19:33:06.182"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:06.182" starttime="20170515 19:33:06.181"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:06.183" starttime="20170515 19:33:00.153"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:33:16.188" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:33:16.188" starttime="20170515 19:33:16.187"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:33:16.194" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:33:22.198" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:33:22.199" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:33:22.199" starttime="20170515 19:33:16.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:33:22.203" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:33:22.203" starttime="20170515 19:33:22.202"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:33:22.204" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:33:22.204" starttime="20170515 19:33:22.203"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:22.205" starttime="20170515 19:33:16.187"></status>
</kw>
<msg timestamp="20170515 19:33:22.205" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:33:22.205" starttime="20170515 19:33:16.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:33:22.207" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:33:22.207" starttime="20170515 19:33:22.206"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:22.207" starttime="20170515 19:33:22.206"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:22.207" starttime="20170515 19:33:16.183"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:33:32.214" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:33:32.214" starttime="20170515 19:33:32.214"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:33:32.228" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:33:38.239" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:33:38.239" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:33:38.240" starttime="20170515 19:33:32.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:33:38.256" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:33:38.256" starttime="20170515 19:33:38.253"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:33:38.259" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:33:38.259" starttime="20170515 19:33:38.257"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:38.260" starttime="20170515 19:33:32.213"></status>
</kw>
<msg timestamp="20170515 19:33:38.260" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:33:38.260" starttime="20170515 19:33:32.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:33:38.263" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:33:38.263" starttime="20170515 19:33:38.263"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:38.263" starttime="20170515 19:33:38.261"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:38.264" starttime="20170515 19:33:32.208"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:33:48.266" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:33:48.266" starttime="20170515 19:33:48.266"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:33:48.274" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:33:54.294" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:33:54.294" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:33:54.294" starttime="20170515 19:33:48.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:33:54.297" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:33:54.298" starttime="20170515 19:33:54.297"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:33:54.299" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:33:54.299" starttime="20170515 19:33:54.298"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:54.299" starttime="20170515 19:33:48.265"></status>
</kw>
<msg timestamp="20170515 19:33:54.299" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:33:54.299" starttime="20170515 19:33:48.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:33:54.301" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:33:54.301" starttime="20170515 19:33:54.301"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:54.301" starttime="20170515 19:33:54.300"></status>
</kw>
<status status="FAIL" endtime="20170515 19:33:54.301" starttime="20170515 19:33:48.264"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:34:04.304" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:34:04.304" starttime="20170515 19:34:04.304"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:34:04.308" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:34:10.324" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:34:10.324" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:34:10.324" starttime="20170515 19:34:04.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:34:10.328" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3013ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:34:10.328" starttime="20170515 19:34:10.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:34:10.329" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:34:10.329" starttime="20170515 19:34:10.328"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:10.329" starttime="20170515 19:34:04.303"></status>
</kw>
<msg timestamp="20170515 19:34:10.330" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:34:10.330" starttime="20170515 19:34:04.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:34:10.331" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:34:10.331" starttime="20170515 19:34:10.331"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:10.331" starttime="20170515 19:34:10.330"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:10.331" starttime="20170515 19:34:04.302"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:34:20.334" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:34:20.335" starttime="20170515 19:34:20.334"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:34:20.338" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:34:26.355" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:34:26.355" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:34:26.356" starttime="20170515 19:34:20.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:34:26.359" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:34:26.359" starttime="20170515 19:34:26.358"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:34:26.360" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:34:26.360" starttime="20170515 19:34:26.359"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:26.360" starttime="20170515 19:34:20.333"></status>
</kw>
<msg timestamp="20170515 19:34:26.360" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:34:26.360" starttime="20170515 19:34:20.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:34:26.362" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:34:26.362" starttime="20170515 19:34:26.361"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:26.362" starttime="20170515 19:34:26.361"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:26.362" starttime="20170515 19:34:20.332"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:34:36.365" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:34:36.365" starttime="20170515 19:34:36.365"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:34:36.368" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:34:42.388" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:34:42.388" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:34:42.388" starttime="20170515 19:34:36.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:34:42.391" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:34:42.391" starttime="20170515 19:34:42.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:34:42.392" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:34:42.393" starttime="20170515 19:34:42.392"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:42.393" starttime="20170515 19:34:36.364"></status>
</kw>
<msg timestamp="20170515 19:34:42.393" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:34:42.393" starttime="20170515 19:34:36.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:34:42.395" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:34:42.395" starttime="20170515 19:34:42.394"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:42.395" starttime="20170515 19:34:42.394"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:42.395" starttime="20170515 19:34:36.363"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:34:52.398" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:34:52.398" starttime="20170515 19:34:52.398"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:34:52.403" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:34:58.420" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:34:58.420" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:34:58.420" starttime="20170515 19:34:52.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:34:58.423" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:34:58.424" starttime="20170515 19:34:58.423"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:34:58.425" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:34:58.425" starttime="20170515 19:34:58.424"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:58.425" starttime="20170515 19:34:52.397"></status>
</kw>
<msg timestamp="20170515 19:34:58.425" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:34:58.425" starttime="20170515 19:34:52.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:34:58.427" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:34:58.427" starttime="20170515 19:34:58.426"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:58.427" starttime="20170515 19:34:58.426"></status>
</kw>
<status status="FAIL" endtime="20170515 19:34:58.427" starttime="20170515 19:34:52.396"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:35:08.430" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:35:08.430" starttime="20170515 19:35:08.430"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:35:08.434" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:35:14.439" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:35:14.440" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:35:14.440" starttime="20170515 19:35:08.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:35:14.443" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:35:14.443" starttime="20170515 19:35:14.442"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:35:14.445" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:35:14.445" starttime="20170515 19:35:14.443"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:14.445" starttime="20170515 19:35:08.429"></status>
</kw>
<msg timestamp="20170515 19:35:14.446" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:35:14.446" starttime="20170515 19:35:08.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:35:14.447" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:35:14.447" starttime="20170515 19:35:14.447"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:14.447" starttime="20170515 19:35:14.446"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:14.447" starttime="20170515 19:35:08.428"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:35:24.450" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:35:24.450" starttime="20170515 19:35:24.450"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:35:24.453" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:35:30.471" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:35:30.471" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:35:30.472" starttime="20170515 19:35:24.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:35:30.475" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:35:30.475" starttime="20170515 19:35:30.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:35:30.476" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:35:30.476" starttime="20170515 19:35:30.475"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:30.476" starttime="20170515 19:35:24.449"></status>
</kw>
<msg timestamp="20170515 19:35:30.476" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:35:30.476" starttime="20170515 19:35:24.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:35:30.478" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:35:30.478" starttime="20170515 19:35:30.477"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:30.478" starttime="20170515 19:35:30.477"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:30.478" starttime="20170515 19:35:24.448"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:35:40.481" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:35:40.481" starttime="20170515 19:35:40.480"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:35:40.484" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:35:46.494" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:35:46.494" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:35:46.495" starttime="20170515 19:35:40.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:35:46.510" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:35:46.510" starttime="20170515 19:35:46.507"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:35:46.512" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:35:46.513" starttime="20170515 19:35:46.511"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:46.514" starttime="20170515 19:35:40.480"></status>
</kw>
<msg timestamp="20170515 19:35:46.514" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:35:46.514" starttime="20170515 19:35:40.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:35:46.517" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:35:46.517" starttime="20170515 19:35:46.517"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:46.517" starttime="20170515 19:35:46.515"></status>
</kw>
<status status="FAIL" endtime="20170515 19:35:46.517" starttime="20170515 19:35:40.479"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:35:56.521" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:35:56.521" starttime="20170515 19:35:56.520"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:35:56.525" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:36:02.528" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:36:02.528" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:36:02.528" starttime="20170515 19:35:56.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:36:02.531" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:36:02.531" starttime="20170515 19:36:02.530"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:36:02.532" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:36:02.532" starttime="20170515 19:36:02.532"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:02.533" starttime="20170515 19:35:56.519"></status>
</kw>
<msg timestamp="20170515 19:36:02.533" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:36:02.533" starttime="20170515 19:35:56.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:36:02.534" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:36:02.534" starttime="20170515 19:36:02.534"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:02.534" starttime="20170515 19:36:02.533"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:02.536" starttime="20170515 19:35:56.518"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:36:12.538" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:36:12.538" starttime="20170515 19:36:12.538"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:36:12.541" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:36:18.548" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:36:18.549" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:36:18.549" starttime="20170515 19:36:12.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:36:18.553" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:36:18.553" starttime="20170515 19:36:18.552"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:36:18.554" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:36:18.554" starttime="20170515 19:36:18.553"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:18.554" starttime="20170515 19:36:12.537"></status>
</kw>
<msg timestamp="20170515 19:36:18.554" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:36:18.554" starttime="20170515 19:36:12.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:36:18.559" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:36:18.559" starttime="20170515 19:36:18.559"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:18.559" starttime="20170515 19:36:18.558"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:18.560" starttime="20170515 19:36:12.536"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:36:28.563" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:36:28.563" starttime="20170515 19:36:28.562"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:36:28.566" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:36:34.590" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:36:34.590" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:36:34.591" starttime="20170515 19:36:28.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:36:34.608" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3016ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:36:34.608" starttime="20170515 19:36:34.604"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:36:34.609" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:36:34.609" starttime="20170515 19:36:34.608"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:34.611" starttime="20170515 19:36:28.562"></status>
</kw>
<msg timestamp="20170515 19:36:34.611" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:36:34.611" starttime="20170515 19:36:28.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:36:34.614" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:36:34.614" starttime="20170515 19:36:34.614"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:34.614" starttime="20170515 19:36:34.612"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:34.615" starttime="20170515 19:36:28.560"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:36:44.618" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:36:44.618" starttime="20170515 19:36:44.617"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:36:44.625" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:36:50.629" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:36:50.630" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:36:50.631" starttime="20170515 19:36:44.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:36:50.647" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:36:50.648" starttime="20170515 19:36:50.644"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:36:50.651" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:36:50.651" starttime="20170515 19:36:50.648"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:50.652" starttime="20170515 19:36:44.617"></status>
</kw>
<msg timestamp="20170515 19:36:50.653" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:36:50.653" starttime="20170515 19:36:44.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:36:50.655" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:36:50.655" starttime="20170515 19:36:50.655"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:50.655" starttime="20170515 19:36:50.653"></status>
</kw>
<status status="FAIL" endtime="20170515 19:36:50.655" starttime="20170515 19:36:44.615"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:37:00.659" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:37:00.659" starttime="20170515 19:37:00.659"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:37:00.662" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:37:06.680" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:37:06.680" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:37:06.680" starttime="20170515 19:37:00.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:37:06.684" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:37:06.684" starttime="20170515 19:37:06.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:37:06.685" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:37:06.685" starttime="20170515 19:37:06.684"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:06.685" starttime="20170515 19:37:00.658"></status>
</kw>
<msg timestamp="20170515 19:37:06.685" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:37:06.685" starttime="20170515 19:37:00.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:37:06.687" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:37:06.687" starttime="20170515 19:37:06.686"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:06.687" starttime="20170515 19:37:06.686"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:06.687" starttime="20170515 19:37:00.656"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:37:16.690" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:37:16.690" starttime="20170515 19:37:16.690"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:37:16.693" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:37:22.700" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:37:22.701" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:37:22.702" starttime="20170515 19:37:16.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:37:22.719" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:37:22.720" starttime="20170515 19:37:22.716"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:37:22.721" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:37:22.721" starttime="20170515 19:37:22.720"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:22.723" starttime="20170515 19:37:16.689"></status>
</kw>
<msg timestamp="20170515 19:37:22.723" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:37:22.723" starttime="20170515 19:37:16.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:37:22.727" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:37:22.727" starttime="20170515 19:37:22.727"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:22.727" starttime="20170515 19:37:22.724"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:22.728" starttime="20170515 19:37:16.688"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:37:32.730" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:37:32.730" starttime="20170515 19:37:32.730"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:37:32.733" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:37:38.751" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:37:38.752" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:37:38.752" starttime="20170515 19:37:32.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:37:38.755" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:37:38.755" starttime="20170515 19:37:38.754"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:37:38.756" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:37:38.756" starttime="20170515 19:37:38.755"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:38.756" starttime="20170515 19:37:32.729"></status>
</kw>
<msg timestamp="20170515 19:37:38.756" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:37:38.756" starttime="20170515 19:37:32.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:37:38.758" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:37:38.758" starttime="20170515 19:37:38.758"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:38.758" starttime="20170515 19:37:38.757"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:38.758" starttime="20170515 19:37:32.728"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:37:48.761" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:37:48.762" starttime="20170515 19:37:48.761"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:37:48.765" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:37:54.784" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:37:54.784" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:37:54.784" starttime="20170515 19:37:48.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:37:54.788" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:37:54.788" starttime="20170515 19:37:54.787"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:37:54.789" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:37:54.789" starttime="20170515 19:37:54.788"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:54.789" starttime="20170515 19:37:48.760"></status>
</kw>
<msg timestamp="20170515 19:37:54.789" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:37:54.789" starttime="20170515 19:37:48.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:37:54.791" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:37:54.791" starttime="20170515 19:37:54.791"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:54.791" starttime="20170515 19:37:54.790"></status>
</kw>
<status status="FAIL" endtime="20170515 19:37:54.791" starttime="20170515 19:37:48.759"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:38:04.795" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:38:04.796" starttime="20170515 19:38:04.795"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:38:04.805" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:38:10.818" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:38:10.818" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:38:10.818" starttime="20170515 19:38:04.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:38:10.822" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:38:10.822" starttime="20170515 19:38:10.821"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:38:10.823" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:38:10.823" starttime="20170515 19:38:10.822"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:10.823" starttime="20170515 19:38:04.795"></status>
</kw>
<msg timestamp="20170515 19:38:10.823" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:38:10.823" starttime="20170515 19:38:04.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:38:10.825" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:38:10.825" starttime="20170515 19:38:10.825"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:10.825" starttime="20170515 19:38:10.824"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:10.825" starttime="20170515 19:38:04.792"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:38:20.828" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:38:20.828" starttime="20170515 19:38:20.828"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:38:20.831" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:38:26.848" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:38:26.848" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:38:26.848" starttime="20170515 19:38:20.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:38:26.852" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:38:26.852" starttime="20170515 19:38:26.851"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:38:26.853" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:38:26.853" starttime="20170515 19:38:26.852"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:26.853" starttime="20170515 19:38:20.827"></status>
</kw>
<msg timestamp="20170515 19:38:26.853" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:38:26.853" starttime="20170515 19:38:20.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:38:26.855" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:38:26.855" starttime="20170515 19:38:26.855"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:26.855" starttime="20170515 19:38:26.854"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:26.855" starttime="20170515 19:38:20.826"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:38:36.858" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:38:36.858" starttime="20170515 19:38:36.858"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:38:36.861" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:38:42.868" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:38:42.868" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:38:42.870" starttime="20170515 19:38:36.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:38:42.880" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:38:42.880" starttime="20170515 19:38:42.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:38:42.883" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:38:42.883" starttime="20170515 19:38:42.880"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:42.883" starttime="20170515 19:38:36.857"></status>
</kw>
<msg timestamp="20170515 19:38:42.883" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:38:42.883" starttime="20170515 19:38:36.857"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:38:42.884" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:38:42.884" starttime="20170515 19:38:42.884"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:42.884" starttime="20170515 19:38:42.883"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:42.885" starttime="20170515 19:38:36.856"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:38:52.887" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:38:52.887" starttime="20170515 19:38:52.887"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:38:52.891" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:38:58.914" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:38:58.914" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:38:58.915" starttime="20170515 19:38:52.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:38:58.932" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:38:58.933" starttime="20170515 19:38:58.929"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:38:58.935" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:38:58.935" starttime="20170515 19:38:58.933"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:58.936" starttime="20170515 19:38:52.886"></status>
</kw>
<msg timestamp="20170515 19:38:58.936" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:38:58.937" starttime="20170515 19:38:52.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:38:58.939" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:38:58.940" starttime="20170515 19:38:58.939"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:58.940" starttime="20170515 19:38:58.938"></status>
</kw>
<status status="FAIL" endtime="20170515 19:38:58.941" starttime="20170515 19:38:52.885"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:39:08.944" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:39:08.944" starttime="20170515 19:39:08.944"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:39:08.953" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:39:14.957" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:39:14.957" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:39:14.958" starttime="20170515 19:39:08.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:39:14.975" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3000ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:39:14.975" starttime="20170515 19:39:14.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:39:14.977" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:39:14.977" starttime="20170515 19:39:14.975"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:14.979" starttime="20170515 19:39:08.943"></status>
</kw>
<msg timestamp="20170515 19:39:14.979" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:39:14.980" starttime="20170515 19:39:08.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:39:14.982" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:39:14.982" starttime="20170515 19:39:14.982"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:14.982" starttime="20170515 19:39:14.980"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:14.983" starttime="20170515 19:39:08.941"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:39:24.985" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:39:24.985" starttime="20170515 19:39:24.985"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:39:24.990" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:39:30.997" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:39:30.997" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:39:30.998" starttime="20170515 19:39:24.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:39:31.014" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:39:31.014" starttime="20170515 19:39:31.011"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:39:31.016" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:39:31.016" starttime="20170515 19:39:31.015"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:31.017" starttime="20170515 19:39:24.984"></status>
</kw>
<msg timestamp="20170515 19:39:31.018" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:39:31.018" starttime="20170515 19:39:24.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:39:31.021" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:39:31.021" starttime="20170515 19:39:31.021"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:31.021" starttime="20170515 19:39:31.019"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:31.025" starttime="20170515 19:39:24.983"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:39:41.027" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:39:41.027" starttime="20170515 19:39:41.027"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:39:41.042" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:39:47.054" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:39:47.054" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:39:47.055" starttime="20170515 19:39:41.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:39:47.071" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:39:47.071" starttime="20170515 19:39:47.068"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:39:47.074" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:39:47.075" starttime="20170515 19:39:47.072"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:47.075" starttime="20170515 19:39:41.027"></status>
</kw>
<msg timestamp="20170515 19:39:47.076" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:39:47.076" starttime="20170515 19:39:41.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:39:47.079" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:39:47.079" starttime="20170515 19:39:47.078"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:47.079" starttime="20170515 19:39:47.077"></status>
</kw>
<status status="FAIL" endtime="20170515 19:39:47.079" starttime="20170515 19:39:41.025"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:39:57.082" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:39:57.082" starttime="20170515 19:39:57.082"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:39:57.085" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:40:03.094" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:40:03.094" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:40:03.095" starttime="20170515 19:39:57.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:40:03.110" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:40:03.111" starttime="20170515 19:40:03.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:40:03.113" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:40:03.113" starttime="20170515 19:40:03.111"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:03.114" starttime="20170515 19:39:57.081"></status>
</kw>
<msg timestamp="20170515 19:40:03.115" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:40:03.115" starttime="20170515 19:39:57.081"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:40:03.119" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:40:03.119" starttime="20170515 19:40:03.119"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:03.119" starttime="20170515 19:40:03.116"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:03.119" starttime="20170515 19:39:57.080"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:40:13.123" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:40:13.123" starttime="20170515 19:40:13.123"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:40:13.128" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:40:19.143" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:40:19.144" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:40:19.144" starttime="20170515 19:40:13.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:40:19.147" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:40:19.147" starttime="20170515 19:40:19.146"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:40:19.148" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:40:19.148" starttime="20170515 19:40:19.147"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:19.148" starttime="20170515 19:40:13.122"></status>
</kw>
<msg timestamp="20170515 19:40:19.148" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:40:19.148" starttime="20170515 19:40:13.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:40:19.150" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:40:19.150" starttime="20170515 19:40:19.150"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:19.150" starttime="20170515 19:40:19.149"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:19.150" starttime="20170515 19:40:13.120"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:40:29.154" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:40:29.154" starttime="20170515 19:40:29.153"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:40:29.157" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:40:35.165" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:40:35.166" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:40:35.167" starttime="20170515 19:40:29.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:40:35.183" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:40:35.183" starttime="20170515 19:40:35.180"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:40:35.186" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:40:35.186" starttime="20170515 19:40:35.184"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:35.187" starttime="20170515 19:40:29.153"></status>
</kw>
<msg timestamp="20170515 19:40:35.187" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:40:35.187" starttime="20170515 19:40:29.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:40:35.190" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:40:35.190" starttime="20170515 19:40:35.190"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:35.190" starttime="20170515 19:40:35.188"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:35.191" starttime="20170515 19:40:29.151"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:40:45.195" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:40:45.195" starttime="20170515 19:40:45.194"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:40:45.204" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:40:51.222" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:40:51.222" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:40:51.223" starttime="20170515 19:40:45.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:40:51.239" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:40:51.239" starttime="20170515 19:40:51.235"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:40:51.241" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:40:51.241" starttime="20170515 19:40:51.239"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:51.241" starttime="20170515 19:40:45.193"></status>
</kw>
<msg timestamp="20170515 19:40:51.243" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:40:51.243" starttime="20170515 19:40:45.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:40:51.244" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:40:51.244" starttime="20170515 19:40:51.244"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:51.244" starttime="20170515 19:40:51.243"></status>
</kw>
<status status="FAIL" endtime="20170515 19:40:51.245" starttime="20170515 19:40:45.191"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:41:01.248" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:41:01.248" starttime="20170515 19:41:01.248"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:41:01.253" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:41:07.274" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:41:07.274" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:41:07.275" starttime="20170515 19:41:01.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:41:07.291" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3014ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:41:07.291" starttime="20170515 19:41:07.288"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:41:07.293" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:41:07.293" starttime="20170515 19:41:07.291"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:07.294" starttime="20170515 19:41:01.248"></status>
</kw>
<msg timestamp="20170515 19:41:07.295" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:41:07.295" starttime="20170515 19:41:01.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:41:07.298" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:41:07.298" starttime="20170515 19:41:07.297"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:07.298" starttime="20170515 19:41:07.295"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:07.298" starttime="20170515 19:41:01.246"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:41:17.302" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:41:17.304" starttime="20170515 19:41:17.302"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:41:17.313" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:41:23.324" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:41:23.324" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:41:23.324" starttime="20170515 19:41:17.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:41:23.328" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3013ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:41:23.328" starttime="20170515 19:41:23.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:41:23.329" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:41:23.329" starttime="20170515 19:41:23.328"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:23.329" starttime="20170515 19:41:17.302"></status>
</kw>
<msg timestamp="20170515 19:41:23.330" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:41:23.330" starttime="20170515 19:41:17.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:41:23.331" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:41:23.331" starttime="20170515 19:41:23.331"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:23.331" starttime="20170515 19:41:23.330"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:23.331" starttime="20170515 19:41:17.299"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:41:33.334" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:41:33.334" starttime="20170515 19:41:33.334"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:41:33.337" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:41:39.340" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:41:39.340" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:41:39.340" starttime="20170515 19:41:33.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:41:39.343" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2999ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:41:39.344" starttime="20170515 19:41:39.343"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:41:39.345" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:41:39.345" starttime="20170515 19:41:39.344"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:39.345" starttime="20170515 19:41:33.333"></status>
</kw>
<msg timestamp="20170515 19:41:39.345" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:41:39.345" starttime="20170515 19:41:33.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:41:39.347" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:41:39.347" starttime="20170515 19:41:39.347"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:39.347" starttime="20170515 19:41:39.346"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:39.347" starttime="20170515 19:41:33.332"></status>
</kw>
<kw name="Verify Ping and REST Authentication" library="utils">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Ping Host</arg>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<assign>
<var>${l_ping}</var>
</assign>
<kw name="Ping Host" library="utils">
<arguments>
<arg>${OPENBMC_HOST}</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:41:49.350" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:41:49.350" starttime="20170515 19:41:49.349"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:41:49.353" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:41:55.377" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:41:55.378" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:41:55.379" starttime="20170515 19:41:49.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:41:55.395" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3015ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:41:55.395" starttime="20170515 19:41:55.392"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:41:55.397" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:41:55.397" starttime="20170515 19:41:55.396"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:55.397" starttime="20170515 19:41:49.349"></status>
</kw>
<msg timestamp="20170515 19:41:55.397" level="INFO">${l_ping} = False</msg>
<status status="PASS" endtime="20170515 19:41:55.397" starttime="20170515 19:41:49.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${l_ping}' == '${False}'</arg>
<arg>Fail</arg>
<arg>msg=Ping Failed</arg>
</arguments>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<arguments>
<arg>msg=Ping Failed</arg>
</arguments>
<msg timestamp="20170515 19:41:55.399" level="FAIL">Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:41:55.399" starttime="20170515 19:41:55.398"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:55.399" starttime="20170515 19:41:55.398"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:55.399" starttime="20170515 19:41:49.348"></status>
</kw>
<msg timestamp="20170515 19:41:55.399" level="FAIL">Keyword 'Verify Ping and REST Authentication' failed after retrying for 20 minutes. The last error was: Ping Failed</msg>
<status status="FAIL" endtime="20170515 19:41:55.399" starttime="20170515 19:21:50.745"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:55.399" starttime="20170515 19:21:50.745"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:55.400" starttime="20170515 19:21:34.720"></status>
</kw>
<status status="FAIL" endtime="20170515 19:41:55.400" starttime="20170515 19:21:34.719"></status>
</kw>
<kw type="teardown" name="Run Key" library="gen_robot_keyword">
<doc>Run the given keyword, return the status and the keyword return values.</doc>
<arguments>
<arg>FFDC On Test Case Fail</arg>
</arguments>
<kw name="FFDC On Test Case Fail" library="openbmc_ffdc">
<doc>Generic FFDC entry point. Place holder to hook in</doc>
<kw name="Is Host Quiesced" library="state_manager">
<doc>Check if host state is quiesced.</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Get Host State" library="state_manager">
<doc>Return the state of the host as a string.</doc>
<assign>
<var>${host_state}</var>
</assign>
<kw name="Read Attribute" library="rest_client">
<arguments>
<arg>${HOST_STATE_URI}</arg>
<arg>CurrentHostState</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<kw name="OpenBMC Get Request" library="rest_client">
<arguments>
<arg>${uri}/attr/${attr}</arg>
<arg>timeout=${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>40 sec</arg>
<arg>20 sec</arg>
<arg>Post Login Request</arg>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:41:55.424" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:41:55.425" starttime="20170515 19:41:55.423"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:41:55.425" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:41:55.425" starttime="20170515 19:41:55.425"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:41:55.426" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:41:55.426" starttime="20170515 19:41:55.426"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:41:55.427" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:41:55.427" starttime="20170515 19:41:55.427"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:42:07.431" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9f0975d0&gt;: Failed to establish a new connection: [Errno 113] No route to host',))</msg>
<status status="FAIL" endtime="20170515 19:42:07.431" starttime="20170515 19:41:55.428"></status>
</kw>
<msg timestamp="20170515 19:42:07.431" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170515 19:42:07.431" level="INFO">${resp} = ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection ...</msg>
<status status="PASS" endtime="20170515 19:42:07.431" starttime="20170515 19:41:55.427"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:42:07.432" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170515 19:42:07.432" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9f0975d0&gt;: Failed to establish a new connection: [Errno 113] No route to host',)): FAIL != PASS</msg>
<status status="FAIL" endtime="20170515 19:42:07.432" starttime="20170515 19:42:07.432"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:42:07.433" level="FAIL">Resolving variable '${resp.status_code}' failed: AttributeError: 'unicode' object has no attribute 'status_code'</msg>
<status status="FAIL" endtime="20170515 19:42:07.433" starttime="20170515 19:42:07.432"></status>
</kw>
<status status="FAIL" endtime="20170515 19:42:07.433" starttime="20170515 19:41:55.422"></status>
</kw>
<kw name="Post Login Request" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170515 19:42:27.435" level="INFO">Creating Session using : alias=openbmc, url=https://9.41.166.169, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170515 19:42:27.436" starttime="20170515 19:42:27.435"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170515 19:42:27.437" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170515 19:42:27.437" starttime="20170515 19:42:27.436"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170515 19:42:27.437" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170515 19:42:27.437" starttime="20170515 19:42:27.437"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170515 19:42:27.438" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170515 19:42:27.438" starttime="20170515 19:42:27.437"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170515 19:42:39.439" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e7c9290&gt;: Failed to establish a new connection: [Errno 113] No route to host',))</msg>
<status status="FAIL" endtime="20170515 19:42:39.439" starttime="20170515 19:42:27.439"></status>
</kw>
<msg timestamp="20170515 19:42:39.439" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170515 19:42:39.439" level="INFO">${resp} = ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection ...</msg>
<status status="PASS" endtime="20170515 19:42:39.439" starttime="20170515 19:42:27.438"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170515 19:42:39.440" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170515 19:42:39.440" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e7c9290&gt;: Failed to establish a new connection: [Errno 113] No route to host',)): FAIL != PASS</msg>
<status status="FAIL" endtime="20170515 19:42:39.440" starttime="20170515 19:42:39.440"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:42:39.441" level="FAIL">Resolving variable '${resp.status_code}' failed: AttributeError: 'unicode' object has no attribute 'status_code'</msg>
<status status="FAIL" endtime="20170515 19:42:39.441" starttime="20170515 19:42:39.441"></status>
</kw>
<status status="FAIL" endtime="20170515 19:42:39.441" starttime="20170515 19:42:27.434"></status>
</kw>
<msg timestamp="20170515 19:42:39.442" level="FAIL">Keyword 'Post Login Request' failed after retrying for 40 seconds. The last error was: Several failures occurred:

1) ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /login (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e7c9290&gt;: Failed to establish a new connection: [Errno 113] No route to host',)): FAIL != PASS

2) Resolving variable '${resp.status_code}' failed: AttributeError: 'unicode' object has no attribute 'status_code'</msg>
<status status="FAIL" endtime="20170515 19:42:39.442" starttime="20170515 19:41:55.422"></status>
</kw>
<status status="FAIL" endtime="20170515 19:42:39.442" starttime="20170515 19:41:55.421"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170515 19:42:39.443" level="INFO">${base_uri} = /xyz/openbmc_project/state/host0//attr/CurrentHostState</msg>
<status status="PASS" endtime="20170515 19:42:39.443" starttime="20170515 19:42:39.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Request</arg>
<arg>method=Get</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:42:39.443" starttime="20170515 19:42:39.443"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170515 19:42:51.439" level="INFO">${ret} = None</msg>
<msg timestamp="20170515 19:42:51.439" level="FAIL">ConnectionError: HTTPSConnectionPool(host='9.41.166.169', port=443): Max retries exceeded with url: /xyz/openbmc_project/state/host0//attr/CurrentHostState (Caused by NewConnectionError('&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9e836d50&gt;: Failed to establish a new connection: [Errno 113] No route to host',))</msg>
<status status="FAIL" endtime="20170515 19:42:51.439" starttime="20170515 19:42:39.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Response</arg>
<arg>${ret}</arg>
</arguments>
<status status="PASS" endtime="20170515 19:42:51.440" starttime="20170515 19:42:51.440"></status>
</kw>
<msg timestamp="20170515 19:42:51.440" level="INFO">${resp} = None</msg>
<status status="FAIL" endtime="20170515 19:42:51.440" starttime="20170515 19:41:55.420"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170515 19:42:51.441" level="FAIL">Resolving variable '${resp.status_code}' failed: AttributeError: 'NoneType' object has no attribute 'status_code'</msg>
<status status="FAIL" endtime="20170515 19:42:51.441" starttime="20170515 19:42:51.441"></status>
</kw>
<kw name="To Json" library="RequestsLibrary.RequestsKeywords">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20170515 19:42:51.442" level="INFO">${content} = None</msg>
<msg timestamp="20170515 19:42:51.442" level="FAIL">Resolving variable '${resp.content}' failed: AttributeError: 'NoneType' object has no attribute 'content'</msg>
<status status="FAIL" endtime="20170515 19:42:51.442" starttime="20170515 19:42:51.441"></status>
</kw>
<msg timestamp="20170515 19:42:51.442" level="INFO">${state} = None</msg>
<msg timestamp="20170515 19:42:51.442" level="FAIL">Replacing variables from keyword return value failed: Resolving variable '${content["data"]}' failed: TypeError: 'NoneType' object has no attribute '__getitem__'</msg>
<status status="FAIL" endtime="20170515 19:42:51.442" starttime="20170515 19:41:55.419"></status>
</kw>
<msg timestamp="20170515 19:42:51.443" level="INFO">${host_state} = None</msg>
<msg timestamp="20170515 19:42:51.443" level="FAIL">Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'</msg>
<status status="FAIL" endtime="20170515 19:42:51.443" starttime="20170515 19:41:55.419"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${host_state}</arg>
<arg>Quiesced</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${host_state}</arg>
<arg>Quiesced</arg>
</arguments>
<msg timestamp="20170515 19:42:51.444" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170515 19:42:51.444" level="FAIL">None != Quiesced</msg>
<status status="FAIL" endtime="20170515 19:42:51.444" starttime="20170515 19:42:51.444"></status>
</kw>
<msg timestamp="20170515 19:42:51.444" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20170515 19:42:51.444" starttime="20170515 19:42:51.443"></status>
</kw>
<msg timestamp="20170515 19:42:51.444" level="INFO">${status} = False</msg>
<status status="FAIL" endtime="20170515 19:42:51.444" starttime="20170515 19:41:55.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TEST_STATUS}' == 'FAIL' or '${status}'=='True'</arg>
<arg>FFDC</arg>
</arguments>
<kw name="Ffdc" library="openbmc_ffdc">
<doc>Gather First Failure Data Capture (FFDC).</doc>
<kw name="Ping Host" library="utils">
<arguments>
<arg>9.41.166.169</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170515 19:42:51.465" level="INFO">Length is 12</msg>
<status status="PASS" endtime="20170515 19:42:51.465" starttime="20170515 19:42:51.465"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170515 19:42:51.469" level="INFO">Running command 'ping -c 4 9.41.166.169 2&gt;&amp;1'.</msg>
<msg timestamp="20170515 19:42:57.471" level="INFO">${RC} = 1</msg>
<msg timestamp="20170515 19:42:57.471" level="INFO">${output} = PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Des...</msg>
<status status="PASS" endtime="20170515 19:42:57.471" starttime="20170515 19:42:51.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170515 19:42:57.475" level="INFO">RC: 1
Output:
PING 9.41.166.169 (9.41.166.169) 56(84) bytes of data.
From 9.41.165.94 icmp_seq=1 Destination Host Unreachable
From 9.41.165.94 icmp_seq=2 Destination Host Unreachable
From 9.41.165.94 icmp_seq=3 Destination Host Unreachable
From 9.41.165.94 icmp_seq=4 Destination Host Unreachable

--- 9.41.166.169 ping statistics ---
4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 2998ms
pipe 3</msg>
<status status="PASS" endtime="20170515 19:42:57.475" starttime="20170515 19:42:57.474"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170515 19:42:57.476" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:42:57.476" starttime="20170515 19:42:57.475"></status>
</kw>
<status status="FAIL" endtime="20170515 19:42:57.476" starttime="20170515 19:42:51.464"></status>
</kw>
<msg timestamp="20170515 19:42:57.477" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170515 19:42:57.477" starttime="20170515 19:42:51.445"></status>
</kw>
<status status="FAIL" endtime="20170515 19:42:57.477" starttime="20170515 19:42:51.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='True'</arg>
<arg>Recover Quiesced Host</arg>
</arguments>
<status status="PASS" endtime="20170515 19:42:57.478" starttime="20170515 19:42:57.478"></status>
</kw>
<kw name="Log Test Case Status" library="openbmc_ffdc_methods">
<doc>Test case execution result history.</doc>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${FFDC_DIR_PATH_STYLE}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FFDC_DIR_PATH_STYLE}</var>
</assign>
<msg timestamp="20170515 19:42:57.480" level="INFO">${FFDC_DIR_PATH_STYLE} = </msg>
<status status="PASS" endtime="20170515 19:42:57.480" starttime="20170515 19:42:57.479"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${FFDC_DIR_PATH}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FFDC_DIR_PATH}</var>
</assign>
<msg timestamp="20170515 19:42:57.489" level="INFO">${FFDC_DIR_PATH} = </msg>
<status status="PASS" endtime="20170515 19:42:57.489" starttime="20170515 19:42:57.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${FFDC_DIR_PATH}' == '${EMPTY}'</arg>
<arg>Set FFDC Defaults</arg>
</arguments>
<kw name="Set Ffdc Defaults" library="openbmc_ffdc">
<doc>Set a default value for ffdc_dir_path and ffdc_prefix if they don't</doc>
<kw name="Get Current Time Stamp" library="openbmc_ffdc_utils">
<doc>Get the current time stamp data</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%Y-%m-%d %H:%M:%S:%f</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170515 19:42:57.492" level="INFO">${cur_time} = 2017-05-15 19:42:57:491170</msg>
<status status="PASS" endtime="20170515 19:42:57.492" starttime="20170515 19:42:57.491"></status>
</kw>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${cur_time}</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170515 19:42:57.492" level="INFO">${cur_time} = 20170515194257491170</msg>
<status status="PASS" endtime="20170515 19:42:57.492" starttime="20170515 19:42:57.492"></status>
</kw>
<status status="PASS" endtime="20170515 19:42:57.493" starttime="20170515 19:42:57.490"></status>
</kw>
<msg timestamp="20170515 19:42:57.497" level="INFO">${FFDC_TIME} = 20170515194257491170</msg>
<kw name="Get Test Dir and Name" library="openbmc_ffdc_utils">
<doc>SUITE_NAME and TEST_NAME are automatic variables</doc>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<assign>
<var>${suite_name}</var>
</assign>
<msg timestamp="20170515 19:42:57.499" level="INFO">${suite_name} = UpdateBmc</msg>
<status status="PASS" endtime="20170515 19:42:57.499" starttime="20170515 19:42:57.499"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${FFDC_TIME}_</arg>
<arg>${suite_name}</arg>
</arguments>
<assign>
<var>${suite_name}</var>
</assign>
<msg timestamp="20170515 19:42:57.500" level="INFO">${suite_name} = 20170515194257491170_UpdateBmc</msg>
<status status="PASS" endtime="20170515 19:42:57.500" starttime="20170515 19:42:57.499"></status>
</kw>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<assign>
<var>${test_name}</var>
</assign>
<msg timestamp="20170515 19:42:57.500" level="INFO">${test_name} = InitiateCodeUpdateBMC</msg>
<status status="PASS" endtime="20170515 19:42:57.500" starttime="20170515 19:42:57.500"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${FFDC_TIME}_</arg>
<arg>${test_name}</arg>
</arguments>
<assign>
<var>${test_name}</var>
</assign>
<msg timestamp="20170515 19:42:57.501" level="INFO">${test_name} = 20170515194257491170_InitiateCodeUpdateBMC</msg>
<status status="PASS" endtime="20170515 19:42:57.501" starttime="20170515 19:42:57.501"></status>
</kw>
<status status="PASS" endtime="20170515 19:42:57.501" starttime="20170515 19:42:57.498"></status>
</kw>
<msg timestamp="20170515 19:42:57.501" level="INFO">${FFDC_DIR_PATH} = /home/fspcibld/logs/20170515194257491170_UpdateBmc/20170515194257491170_InitiateCodeUpdateBMC/</msg>
<msg timestamp="20170515 19:42:57.506" level="INFO">${FFDC_PREFIX} = 20170515194257491170_</msg>
<status status="PASS" endtime="20170515 19:42:57.506" starttime="20170515 19:42:57.490"></status>
</kw>
<status status="PASS" endtime="20170515 19:42:57.506" starttime="20170515 19:42:57.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${FFDC_DIR_PATH_STYLE}' == '${1}'</arg>
<arg>Run Keywords</arg>
<arg>Set Global Variable</arg>
<arg>${FFDC_LOG_PATH}</arg>
<arg>${FFDC_DIR_PATH}</arg>
<arg>AND</arg>
<arg>Set Global Variable</arg>
<arg>${TEST_HISTORY}</arg>
<arg>${FFDC_DIR_PATH}test_history.txt</arg>
</arguments>
<status status="PASS" endtime="20170515 19:42:57.507" starttime="20170515 19:42:57.506"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${FFDC_LOG_PATH}</arg>
</arguments>
<msg timestamp="20170515 19:42:57.507" html="yes" level="INFO">Directory '&lt;a href="file:///home/fspcibld/logs"&gt;/home/fspcibld/logs&lt;/a&gt;' already exists.</msg>
<status status="PASS" endtime="20170515 19:42:57.507" starttime="20170515 19:42:57.507"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>OperatingSystem.File Should Exist</arg>
<arg>${TEST_HISTORY}</arg>
</arguments>
<assign>
<var>${exist}</var>
</assign>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${TEST_HISTORY}</arg>
</arguments>
<msg timestamp="20170515 19:42:57.509" level="FAIL">File '/home/fspcibld/logs/test_history.txt' does not exist.</msg>
<status status="FAIL" endtime="20170515 19:42:57.509" starttime="20170515 19:42:57.508"></status>
</kw>
<msg timestamp="20170515 19:42:57.509" level="INFO">${exist} = False</msg>
<status status="PASS" endtime="20170515 19:42:57.509" starttime="20170515 19:42:57.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${exist}' == '${False}'</arg>
<arg>Create File</arg>
<arg>${TEST_HISTORY}</arg>
</arguments>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${TEST_HISTORY}</arg>
</arguments>
<msg timestamp="20170515 19:42:57.510" html="yes" level="INFO">Created file '&lt;a href="file:///home/fspcibld/logs/test_history.txt"&gt;/home/fspcibld/logs/test_history.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170515 19:42:57.510" starttime="20170515 19:42:57.510"></status>
</kw>
<status status="PASS" endtime="20170515 19:42:57.510" starttime="20170515 19:42:57.509"></status>
</kw>
<kw name="Rpvars" library="gen_robot_print">
<arguments>
<arg>TEST_HISTORY</arg>
</arguments>
<status status="PASS" endtime="20170515 19:42:57.511" starttime="20170515 19:42:57.511"></status>
</kw>
<kw name="Get Current Time Stamp" library="openbmc_ffdc_utils">
<doc>Get the current time stamp data</doc>
<assign>
<var>${cur_time}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%Y-%m-%d %H:%M:%S:%f</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170515 19:42:57.512" level="INFO">${cur_time} = 2017-05-15 19:42:57:511914</msg>
<status status="PASS" endtime="20170515 19:42:57.512" starttime="20170515 19:42:57.512"></status>
</kw>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${cur_time}</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170515 19:42:57.513" level="INFO">${cur_time} = 20170515194257511914</msg>
<status status="PASS" endtime="20170515 19:42:57.513" starttime="20170515 19:42:57.512"></status>
</kw>
<msg timestamp="20170515 19:42:57.513" level="INFO">${cur_time} = 20170515194257511914</msg>
<status status="PASS" endtime="20170515 19:42:57.513" starttime="20170515 19:42:57.511"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${TEST_HISTORY}</arg>
<arg>${cur_time}:${SUITE_NAME}:${TEST_NAME}:${TEST_STATUS}${\n}</arg>
</arguments>
<msg timestamp="20170515 19:42:57.514" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/test_history.txt"&gt;/home/fspcibld/logs/test_history.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170515 19:42:57.514" starttime="20170515 19:42:57.513"></status>
</kw>
<status status="PASS" endtime="20170515 19:42:57.514" starttime="20170515 19:42:57.478"></status>
</kw>
<status status="FAIL" endtime="20170515 19:42:57.514" starttime="20170515 19:41:55.418"></status>
</kw>
<msg timestamp="20170515 19:42:57.515" level="FAIL">Several failures occurred:

1) Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'

2) 1 != 0</msg>
<status status="FAIL" endtime="20170515 19:42:57.515" starttime="20170515 19:41:55.404">Several failures occurred:

1) Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'

2) 1 != 0</status>
</kw>
<doc>Initiate a code update on the BMC.</doc>
<tags>
<tag>Initiate_Code_Update_BMC</tag>
</tags>
<status status="FAIL" endtime="20170515 19:42:57.515" critical="yes" starttime="20170515 19:21:34.717">Keyword 'Verify Ping and REST Authentication' failed after retrying for 20 minutes. The last error was: Ping Failed

Also teardown failed:
Several failures occurred:

1) Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'

2) 1 != 0</status>
</test>
<doc>Trigger code update to a target BMC.
Execution Method :
python -m robot -v OPENBMC_HOST:&lt;hostname&gt;
-v FILE_PATH:&lt;path/*all.tar&gt; update_bmc.robot

Code update method BMC using REST
Update work flow sequence:
- User input BMC File existence check
- Ping Test and REST authentication
- Set Host Power host setting Policy to RESTORE_LAST_STATE
On reboot this policy would ensure the BMC comes
online and stays at HOST_POWERED_OFF state.
- Issue poweroff
- Prune archived journal logs
- Prepare for Update
- Wait for BMC to come online clean
- Wait for BMC_READY state
- Apply preserve BMC Network setting
- SCP image to BMC
- Activate the flash image
- Warm Reset BMC to activate code
- Wait for BMC to come online time out 30 minutes
- Version check post update</doc>
<status status="FAIL" endtime="20170515 19:42:57.517" starttime="20170515 19:21:33.803"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Initiate_Code_Update_BMC</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="Update Bmc" pass="0">Update Bmc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
