<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170422 20:41:15.738" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/fspcibld/openbmc-test-automation/extended/code_update/update_bmc.robot" id="s1" name="Update Bmc">
<test id="s1-t1" name="Initiate Code Update BMC">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FORCE_UPDATE} == ${0}</arg>
<arg>Prepare BMC For Update</arg>
</arguments>
<kw name="Prepare BMC For Update">
<doc>Prerequisite operation before code update.</doc>
<kw name="Check Boot Count And Time">
<doc>Check for unexpected reboots.</doc>
<kw name="Set BMC Reset Reference Time" library="utils">
<doc>Set current boot time as a reference and increment</doc>
<kw name="Get BMC Boot Time" library="utils">
<doc>Get boot time from /proc/stat.</doc>
<assign>
<var>${cur_btime}</var>
</assign>
<kw name="Open Connection And Log In" library="connection_client">
<doc>Opens a connection with the given arguments, and logs in.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<assign>
<var>${has_host}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<msg timestamp="20170422 20:41:16.464" level="FAIL">Dictionary does not contain key 'host'.</msg>
<status status="FAIL" endtime="20170422 20:41:16.464" starttime="20170422 20:41:16.464"></status>
</kw>
<msg timestamp="20170422 20:41:16.464" level="INFO">${has_host} = False</msg>
<status status="PASS" endtime="20170422 20:41:16.464" starttime="20170422 20:41:16.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${has_host} == ${FALSE}</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:41:16.466" starttime="20170422 20:41:16.465"></status>
</kw>
<status status="PASS" endtime="20170422 20:41:16.466" starttime="20170422 20:41:16.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and '${HTTPS_PORT}' != '${EMPTY}'</arg>
<arg>User input SSH and HTTPs Ports</arg>
</arguments>
<status status="PASS" endtime="20170422 20:41:16.466" starttime="20170422 20:41:16.466"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<assign>
<var>${has_port}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<msg timestamp="20170422 20:41:16.468" level="FAIL">Dictionary does not contain key 'port'.</msg>
<status status="FAIL" endtime="20170422 20:41:16.468" starttime="20170422 20:41:16.467"></status>
</kw>
<msg timestamp="20170422 20:41:16.468" level="INFO">${has_port} = False</msg>
<status status="PASS" endtime="20170422 20:41:16.468" starttime="20170422 20:41:16.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and ${has_port} == ${FALSE}</arg>
<arg>Run Keywords</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>port=${SSH_PORT}</arg>
<arg>AND</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>&amp;{connection_args}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:41:16.470" starttime="20170422 20:41:16.469"></status>
</kw>
<status status="PASS" endtime="20170422 20:41:16.470" starttime="20170422 20:41:16.469"></status>
</kw>
<status status="PASS" endtime="20170422 20:41:16.470" starttime="20170422 20:41:16.468"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20170422 20:41:16.471" level="INFO">Logging into '9.3.86.161:22' as 'root'.</msg>
<msg timestamp="20170422 20:41:46.506" level="FAIL">timeout: timed out</msg>
<status status="FAIL" endtime="20170422 20:41:46.506" starttime="20170422 20:41:16.470"></status>
</kw>
<status status="FAIL" endtime="20170422 20:41:46.507" starttime="20170422 20:41:16.463"></status>
</kw>
<status status="FAIL" endtime="20170422 20:41:46.507" starttime="20170422 20:41:16.462"></status>
</kw>
<status status="FAIL" endtime="20170422 20:41:46.507" starttime="20170422 20:41:16.462"></status>
</kw>
<status status="FAIL" endtime="20170422 20:41:46.507" starttime="20170422 20:41:16.462"></status>
</kw>
<status status="FAIL" endtime="20170422 20:41:46.507" starttime="20170422 20:41:16.461"></status>
</kw>
<status status="FAIL" endtime="20170422 20:41:46.507" starttime="20170422 20:41:16.461"></status>
</kw>
<kw type="teardown" name="Run Key" library="gen_robot_keyword">
<doc>Run the given keyword, return the status and the keyword return values.</doc>
<arguments>
<arg>FFDC On Test Case Fail</arg>
</arguments>
<kw name="FFDC On Test Case Fail" library="openbmc_ffdc">
<doc>Generic FFDC entry point. Place holder to hook in</doc>
<kw name="Is Host Quiesced" library="state_manager">
<doc>Check if host state is quiesced.</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Get Host State" library="state_manager">
<doc>Return the state of the host as a string.</doc>
<assign>
<var>${host_state}</var>
</assign>
<kw name="Read Attribute" library="rest_client">
<arguments>
<arg>${HOST_STATE_URI}</arg>
<arg>CurrentHostState</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<kw name="OpenBMC Get Request" library="rest_client">
<arguments>
<arg>${uri}/attr/${attr}</arg>
<arg>timeout=${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Initialize OpenBMC" library="rest_client">
<arguments>
<arg>${timeout}</arg>
<arg>quiet=${quiet}</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary.RequestsKeywords">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>openbmc</arg>
<arg>${AUTH_URI}</arg>
<arg>timeout=${timeout}</arg>
<arg>max_retries=3</arg>
</arguments>
<msg timestamp="20170422 20:41:46.519" level="INFO">Creating Session using : alias=openbmc, url=https://9.3.86.161, headers={},                     cookies=None, auth=None, timeout=10, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20170422 20:41:46.520" starttime="20170422 20:41:46.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20170422 20:41:46.521" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20170422 20:41:46.521" starttime="20170422 20:41:46.520"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${OPENBMC_USERNAME}</arg>
<arg>${OPENBMC_PASSWORD}</arg>
</arguments>
<assign>
<var>@{credentials}</var>
</assign>
<msg timestamp="20170422 20:41:46.522" level="INFO">@{credentials} = [ root | 0penBmc ]</msg>
<status status="PASS" endtime="20170422 20:41:46.522" starttime="20170422 20:41:46.521"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>data=@{credentials}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170422 20:41:46.522" level="INFO">${data} = {u'data': [u'root', u'0penBmc']}</msg>
<status status="PASS" endtime="20170422 20:41:46.522" starttime="20170422 20:41:46.522"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Post Request</arg>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${resp}</var>
</assign>
<kw name="Post Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>/login</arg>
<arg>data=${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<msg timestamp="20170422 20:42:27.171" level="FAIL">ConnectTimeout: HTTPSConnectionPool(host='9.3.86.161', port=443): Max retries exceeded with url: /login (Caused by ConnectTimeoutError(&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff966d8bd0&gt;, 'Connection to 9.3.86.161 timed out. (connect timeout=10.0)'))</msg>
<status status="FAIL" endtime="20170422 20:42:27.171" starttime="20170422 20:41:46.523"></status>
</kw>
<msg timestamp="20170422 20:42:27.171" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170422 20:42:27.171" level="INFO">${resp} = ConnectTimeout: HTTPSConnectionPool(host='9.3.86.161', port=443): Max retries exceeded with url: /login (Caused by ConnectTimeoutError(&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection obj...</msg>
<status status="PASS" endtime="20170422 20:42:27.171" starttime="20170422 20:41:46.523"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>PASS</arg>
<arg>msg=${resp}</arg>
</arguments>
<msg timestamp="20170422 20:42:27.172" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170422 20:42:27.172" level="FAIL">ConnectTimeout: HTTPSConnectionPool(host='9.3.86.161', port=443): Max retries exceeded with url: /login (Caused by ConnectTimeoutError(&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff966d8bd0&gt;, 'Connection to 9.3.86.161 timed out. (connect timeout=10.0)')): FAIL != PASS</msg>
<status status="FAIL" endtime="20170422 20:42:27.172" starttime="20170422 20:42:27.172"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170422 20:42:27.173" level="FAIL">Resolving variable '${resp.status_code}' failed: AttributeError: 'unicode' object has no attribute 'status_code'</msg>
<status status="FAIL" endtime="20170422 20:42:27.173" starttime="20170422 20:42:27.173"></status>
</kw>
<status status="FAIL" endtime="20170422 20:42:27.173" starttime="20170422 20:41:46.518"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${DBUS_PREFIX}</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${base_uri}</var>
</assign>
<msg timestamp="20170422 20:42:27.174" level="INFO">${base_uri} = /xyz/openbmc_project/state/host0//attr/CurrentHostState</msg>
<status status="PASS" endtime="20170422 20:42:27.174" starttime="20170422 20:42:27.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Request</arg>
<arg>method=Get</arg>
<arg>base_uri=${base_uri}</arg>
<arg>args=&amp;{kwargs}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:42:27.175" starttime="20170422 20:42:27.174"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary.RequestsKeywords">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>openbmc</arg>
<arg>${base_uri}</arg>
<arg>&amp;{kwargs}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20170422 20:43:07.820" level="INFO">${ret} = None</msg>
<msg timestamp="20170422 20:43:07.820" level="FAIL">ConnectTimeout: HTTPSConnectionPool(host='9.3.86.161', port=443): Max retries exceeded with url: /xyz/openbmc_project/state/host0//attr/CurrentHostState (Caused by ConnectTimeoutError(&lt;requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x3fff9629c490&gt;, 'Connection to 9.3.86.161 timed out. (connect timeout=10.0)'))</msg>
<status status="FAIL" endtime="20170422 20:43:07.820" starttime="20170422 20:42:27.175"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${quiet}' == '${0}'</arg>
<arg>Log Response</arg>
<arg>${ret}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:43:07.821" starttime="20170422 20:43:07.820"></status>
</kw>
<msg timestamp="20170422 20:43:07.821" level="INFO">${resp} = None</msg>
<status status="FAIL" endtime="20170422 20:43:07.821" starttime="20170422 20:41:46.517"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>${HTTP_OK}</arg>
</arguments>
<msg timestamp="20170422 20:43:07.822" level="FAIL">Resolving variable '${resp.status_code}' failed: AttributeError: 'NoneType' object has no attribute 'status_code'</msg>
<status status="FAIL" endtime="20170422 20:43:07.822" starttime="20170422 20:43:07.822"></status>
</kw>
<kw name="To Json" library="RequestsLibrary.RequestsKeywords">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${resp.content}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20170422 20:43:07.823" level="INFO">${content} = None</msg>
<msg timestamp="20170422 20:43:07.823" level="FAIL">Resolving variable '${resp.content}' failed: AttributeError: 'NoneType' object has no attribute 'content'</msg>
<status status="FAIL" endtime="20170422 20:43:07.823" starttime="20170422 20:43:07.822"></status>
</kw>
<msg timestamp="20170422 20:43:07.823" level="INFO">${state} = None</msg>
<msg timestamp="20170422 20:43:07.823" level="FAIL">Replacing variables from keyword return value failed: Resolving variable '${content["data"]}' failed: TypeError: 'NoneType' object has no attribute '__getitem__'</msg>
<status status="FAIL" endtime="20170422 20:43:07.823" starttime="20170422 20:41:46.516"></status>
</kw>
<msg timestamp="20170422 20:43:07.824" level="INFO">${host_state} = None</msg>
<msg timestamp="20170422 20:43:07.824" level="FAIL">Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'</msg>
<status status="FAIL" endtime="20170422 20:43:07.824" starttime="20170422 20:41:46.516"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${host_state}</arg>
<arg>Quiesced</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${host_state}</arg>
<arg>Quiesced</arg>
</arguments>
<msg timestamp="20170422 20:43:07.825" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170422 20:43:07.825" level="FAIL">None != Quiesced</msg>
<status status="FAIL" endtime="20170422 20:43:07.825" starttime="20170422 20:43:07.825"></status>
</kw>
<msg timestamp="20170422 20:43:07.825" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20170422 20:43:07.825" starttime="20170422 20:43:07.824"></status>
</kw>
<msg timestamp="20170422 20:43:07.825" level="INFO">${status} = False</msg>
<status status="FAIL" endtime="20170422 20:43:07.825" starttime="20170422 20:41:46.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TEST_STATUS}' == 'FAIL' or '${status}'=='True'</arg>
<arg>FFDC</arg>
</arguments>
<kw name="Ffdc" library="openbmc_ffdc">
<doc>Gather First Failure Data Capture (FFDC).</doc>
<kw name="Ping Host" library="utils">
<arguments>
<arg>9.3.86.161</arg>
</arguments>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${host}</arg>
<arg>msg=No host provided</arg>
</arguments>
<msg timestamp="20170422 20:43:07.828" level="INFO">Length is 10</msg>
<status status="PASS" endtime="20170422 20:43:07.828" starttime="20170422 20:43:07.827"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>ping -c 4 ${host}</arg>
</arguments>
<assign>
<var>${RC}</var>
<var>${output}</var>
</assign>
<msg timestamp="20170422 20:43:07.838" level="INFO">Running command 'ping -c 4 9.3.86.161 2&gt;&amp;1'.</msg>
<msg timestamp="20170422 20:43:20.863" level="INFO">${RC} = 1</msg>
<msg timestamp="20170422 20:43:20.863" level="INFO">${output} = PING 9.3.86.161 (9.3.86.161) 56(84) bytes of data.

--- 9.3.86.161 ping statistics ---
4 packets transmitted, 0 received, 100% packet loss, time 3022ms
</msg>
<status status="PASS" endtime="20170422 20:43:20.864" starttime="20170422 20:43:07.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>RC: ${RC}\nOutput:\n${output}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.869" level="INFO">RC: 1
Output:
PING 9.3.86.161 (9.3.86.161) 56(84) bytes of data.

--- 9.3.86.161 ping statistics ---
4 packets transmitted, 0 received, 100% packet loss, time 3022ms
</msg>
<status status="PASS" endtime="20170422 20:43:20.869" starttime="20170422 20:43:20.868"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${RC}</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.870" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20170422 20:43:20.870" starttime="20170422 20:43:20.869"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:20.870" starttime="20170422 20:43:07.827"></status>
</kw>
<kw name="Get Current Time Stamp" library="openbmc_ffdc_utils">
<doc>Get the current time stamp data</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%Y-%m-%d %H:%M:%S:%f</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170422 20:43:20.885" level="INFO">${cur_time} = 2017-04-22 20:43:20:884625</msg>
<status status="PASS" endtime="20170422 20:43:20.885" starttime="20170422 20:43:20.884"></status>
</kw>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${cur_time}</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170422 20:43:20.886" level="INFO">${cur_time} = 20170422204320884625</msg>
<status status="PASS" endtime="20170422 20:43:20.887" starttime="20170422 20:43:20.885"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.887" starttime="20170422 20:43:20.883"></status>
</kw>
<msg timestamp="20170422 20:43:20.900" level="INFO">${FFDC_TIME} = 20170422204320884625</msg>
<kw name="Get Test Dir and Name" library="openbmc_ffdc_utils">
<doc>SUITE_NAME and TEST_NAME are automatic variables</doc>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<assign>
<var>${suite_name}</var>
</assign>
<msg timestamp="20170422 20:43:20.902" level="INFO">${suite_name} = UpdateBmc</msg>
<status status="PASS" endtime="20170422 20:43:20.902" starttime="20170422 20:43:20.902"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${FFDC_TIME}_</arg>
<arg>${suite_name}</arg>
</arguments>
<assign>
<var>${suite_name}</var>
</assign>
<msg timestamp="20170422 20:43:20.903" level="INFO">${suite_name} = 20170422204320884625_UpdateBmc</msg>
<status status="PASS" endtime="20170422 20:43:20.903" starttime="20170422 20:43:20.902"></status>
</kw>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<assign>
<var>${test_name}</var>
</assign>
<msg timestamp="20170422 20:43:20.903" level="INFO">${test_name} = InitiateCodeUpdateBMC</msg>
<status status="PASS" endtime="20170422 20:43:20.903" starttime="20170422 20:43:20.903"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${FFDC_TIME}_</arg>
<arg>${test_name}</arg>
</arguments>
<assign>
<var>${test_name}</var>
</assign>
<msg timestamp="20170422 20:43:20.904" level="INFO">${test_name} = 20170422204320884625_InitiateCodeUpdateBMC</msg>
<status status="PASS" endtime="20170422 20:43:20.904" starttime="20170422 20:43:20.903"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.904" starttime="20170422 20:43:20.901"></status>
</kw>
<msg timestamp="20170422 20:43:20.922" level="INFO">${LOG_PREFIX} = /home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_</msg>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/</arg>
</arguments>
<msg timestamp="20170422 20:43:20.924" html="yes" level="INFO">Created directory '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.924" starttime="20170422 20:43:20.923"></status>
</kw>
<msg timestamp="20170422 20:43:20.928" level="INFO">${FFDC_FILE_PATH} = /home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt</msg>
<kw name="Header Message" library="openbmc_ffdc_utils">
<doc>Write header message to the report document manifest.</doc>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${HEADER_MSG}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.930" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.930" starttime="20170422 20:43:20.929"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.930" starttime="20170422 20:43:20.929"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${FOOTER_MSG}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.931" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.931" starttime="20170422 20:43:20.931"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.932" starttime="20170422 20:43:20.930"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Test Suite File\t\t: ${SUITE_NAME} ${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.933" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.933" starttime="20170422 20:43:20.932"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.933" starttime="20170422 20:43:20.932"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Test Case Name\t\t: ${TEST_NAME}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.934" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.934" starttime="20170422 20:43:20.934"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.934" starttime="20170422 20:43:20.933"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Test Source File\t: ${SUITE_SOURCE}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.935" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.935" starttime="20170422 20:43:20.935"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.936" starttime="20170422 20:43:20.934"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Failure Time Stamp\t: ${FFDC_TIME}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.937" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.937" starttime="20170422 20:43:20.936"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.937" starttime="20170422 20:43:20.936"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Test Error Message\t: ${TEST_MESSAGE}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.941" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.941" starttime="20170422 20:43:20.938"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.941" starttime="20170422 20:43:20.937"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Test Documentation\t:${\n}${TEST_DOCUMENTATION}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.942" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.942" starttime="20170422 20:43:20.942"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.942" starttime="20170422 20:43:20.941"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${FOOTER_MSG}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.943" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.943" starttime="20170422 20:43:20.943"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.943" starttime="20170422 20:43:20.942"></status>
</kw>
<kw name="Test Setup Info" library="openbmc_ffdc_utils">
<doc>BMC IP, Model and other information</doc>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${\n}-----------------------${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.945" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.945" starttime="20170422 20:43:20.945"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.945" starttime="20170422 20:43:20.944"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>Test Setup Information:</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.946" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.946" starttime="20170422 20:43:20.946"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.946" starttime="20170422 20:43:20.945"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${\n}-----------------------${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.948" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.948" starttime="20170422 20:43:20.947"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.948" starttime="20170422 20:43:20.947"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>OPENBMC HOST \t: ${OPENBMC_HOST}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.949" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:20.949" starttime="20170422 20:43:20.949"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.949" starttime="20170422 20:43:20.948"></status>
</kw>
<kw name="Get BMC System Model" library="utils">
<doc>Get the BMC model from the device tree.</doc>
<assign>
<var>${model_name}</var>
</assign>
<kw name="Open Connection And Log In" library="connection_client">
<doc>Opens a connection with the given arguments, and logs in.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<assign>
<var>${has_host}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host</arg>
</arguments>
<msg timestamp="20170422 20:43:20.951" level="FAIL">Dictionary does not contain key 'host'.</msg>
<status status="FAIL" endtime="20170422 20:43:20.951" starttime="20170422 20:43:20.951"></status>
</kw>
<msg timestamp="20170422 20:43:20.951" level="INFO">${has_host} = False</msg>
<status status="PASS" endtime="20170422 20:43:20.951" starttime="20170422 20:43:20.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${has_host} == ${FALSE}</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>host=${OPENBMC_HOST}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:43:20.952" starttime="20170422 20:43:20.952"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.953" starttime="20170422 20:43:20.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and '${HTTPS_PORT}' != '${EMPTY}'</arg>
<arg>User input SSH and HTTPs Ports</arg>
</arguments>
<status status="PASS" endtime="20170422 20:43:20.953" starttime="20170422 20:43:20.953"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Dictionary Should Contain Key</arg>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<assign>
<var>${has_port}</var>
</assign>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${connection_args}</arg>
<arg>port</arg>
</arguments>
<msg timestamp="20170422 20:43:20.954" level="FAIL">Dictionary does not contain key 'port'.</msg>
<status status="FAIL" endtime="20170422 20:43:20.954" starttime="20170422 20:43:20.954"></status>
</kw>
<msg timestamp="20170422 20:43:20.954" level="INFO">${has_port} = False</msg>
<status status="PASS" endtime="20170422 20:43:20.954" starttime="20170422 20:43:20.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SSH_PORT}' != '${EMPTY}' and ${has_port} == ${FALSE}</arg>
<arg>Run Keywords</arg>
<arg>Set To Dictionary</arg>
<arg>${connection_args}</arg>
<arg>port=${SSH_PORT}</arg>
<arg>AND</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>SSHLibrary.Open connection</arg>
<arg>&amp;{connection_args}</arg>
</arguments>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>&amp;{connection_args}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:43:20.957" starttime="20170422 20:43:20.956"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.957" starttime="20170422 20:43:20.956"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:20.957" starttime="20170422 20:43:20.955"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20170422 20:43:20.957" level="INFO">Logging into '9.3.86.161:22' as 'root'.</msg>
<msg timestamp="20170422 20:43:50.975" level="FAIL">timeout: timed out</msg>
<status status="FAIL" endtime="20170422 20:43:50.975" starttime="20170422 20:43:20.957"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:50.975" starttime="20170422 20:43:20.950"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cat ${devicetree_base} | cut -d " " -f 1</arg>
<arg>return_stderr=True</arg>
</arguments>
<assign>
<var>${bmc_model}</var>
<var>${stderr}</var>
</assign>
<msg timestamp="20170422 20:43:50.976" level="INFO">Executing command 'cat /sys/firmware/devicetree/base/model | cut -d " " -f 1'.</msg>
<msg timestamp="20170422 20:43:50.976" level="INFO">${bmc_model} = None</msg>
<msg timestamp="20170422 20:43:50.976" level="INFO">${stderr} = None</msg>
<msg timestamp="20170422 20:43:50.977" level="FAIL">Connection not open</msg>
<status status="FAIL" endtime="20170422 20:43:50.977" starttime="20170422 20:43:50.976"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${stderr}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.977" level="FAIL">Could not get length of 'None'.</msg>
<status status="FAIL" endtime="20170422 20:43:50.977" starttime="20170422 20:43:50.977"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${bmc_model}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.978" level="FAIL">Could not get length of 'None'.</msg>
<status status="FAIL" endtime="20170422 20:43:50.978" starttime="20170422 20:43:50.978"></status>
</kw>
<msg timestamp="20170422 20:43:50.978" level="INFO">${model_name} = None</msg>
<status status="FAIL" endtime="20170422 20:43:50.978" starttime="20170422 20:43:20.949"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>SYSTEM TYPE \t: ${model_name}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.980" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.980" starttime="20170422 20:43:50.979"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.980" starttime="20170422 20:43:50.979"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:50.980" starttime="20170422 20:43:20.944"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${\n}${MSG_INTRO}${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.981" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.981" starttime="20170422 20:43:50.981"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.982" starttime="20170422 20:43:50.980"></status>
</kw>
<kw name="Get Ffdc Cmd Index" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<assign>
<var>@{entries}</var>
</assign>
<msg timestamp="20170422 20:43:50.982" level="INFO">@{entries} = [ APPLICATION DATA | DRIVER INFO | BMC DATA ]</msg>
<status status="PASS" endtime="20170422 20:43:50.982" starttime="20170422 20:43:50.982"></status>
</kw>
<kw type="for" name="${index} IN [ @{entries} ]">
<kw type="foritem" name="${index} = APPLICATION DATA">
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>* ${index.upper()}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.984" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.984" starttime="20170422 20:43:50.983"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.984" starttime="20170422 20:43:50.983"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.985" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.985" starttime="20170422 20:43:50.985"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.985" starttime="20170422 20:43:50.984"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.985" starttime="20170422 20:43:50.982"></status>
</kw>
<kw type="foritem" name="${index} = DRIVER INFO">
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>* ${index.upper()}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.986" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.986" starttime="20170422 20:43:50.986"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.987" starttime="20170422 20:43:50.985"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.988" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.988" starttime="20170422 20:43:50.987"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.988" starttime="20170422 20:43:50.987"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.988" starttime="20170422 20:43:50.985"></status>
</kw>
<kw type="foritem" name="${index} = BMC DATA">
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>* ${index.upper()}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.989" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.989" starttime="20170422 20:43:50.989"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.989" starttime="20170422 20:43:50.988"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${\n}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.990" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.991" starttime="20170422 20:43:50.990"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.991" starttime="20170422 20:43:50.990"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.991" starttime="20170422 20:43:50.988"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.991" starttime="20170422 20:43:50.982"></status>
</kw>
<kw name="Write Data To File" library="openbmc_ffdc_utils">
<doc>Write data to the ffdc report document</doc>
<arguments>
<arg>${MSG_DETAIL}</arg>
</arguments>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${filepath}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.992" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt"&gt;/home/fspcibld/logs/20170422204320884625_UpdateBmc/20170422204320884625_InitiateCodeUpdateBMC/20170422204320884625_BMC_general.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.992" starttime="20170422 20:43:50.991"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.992" starttime="20170422 20:43:50.991"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:50.992" starttime="20170422 20:43:20.928"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:50.992" starttime="20170422 20:43:07.826"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:50.992" starttime="20170422 20:43:07.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='True'</arg>
<arg>Recover Quiesced Host</arg>
</arguments>
<status status="PASS" endtime="20170422 20:43:50.993" starttime="20170422 20:43:50.993"></status>
</kw>
<kw name="Log Test Case Status" library="openbmc_ffdc_methods">
<doc>Test case execution result history.</doc>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${FFDC_LOG_PATH}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.994" html="yes" level="INFO">Directory '&lt;a href="file:///home/fspcibld/logs"&gt;/home/fspcibld/logs&lt;/a&gt;' already exists.</msg>
<status status="PASS" endtime="20170422 20:43:50.994" starttime="20170422 20:43:50.994"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>OperatingSystem.File Should Exist</arg>
<arg>${TEST_HISTORY}</arg>
</arguments>
<assign>
<var>${exist}</var>
</assign>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${TEST_HISTORY}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.995" html="yes" level="INFO">File '&lt;a href="file:///home/fspcibld/logs/test_history.txt"&gt;/home/fspcibld/logs/test_history.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" endtime="20170422 20:43:50.995" starttime="20170422 20:43:50.995"></status>
</kw>
<msg timestamp="20170422 20:43:50.995" level="INFO">${exist} = True</msg>
<status status="PASS" endtime="20170422 20:43:50.995" starttime="20170422 20:43:50.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${exist}' == '${False}'</arg>
<arg>Create File</arg>
<arg>${TEST_HISTORY}</arg>
</arguments>
<status status="PASS" endtime="20170422 20:43:50.996" starttime="20170422 20:43:50.996"></status>
</kw>
<kw name="Get Current Time Stamp" library="openbmc_ffdc_utils">
<doc>Get the current time stamp data</doc>
<assign>
<var>${cur_time}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=%Y-%m-%d %H:%M:%S:%f</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170422 20:43:50.997" level="INFO">${cur_time} = 2017-04-22 20:43:50:996810</msg>
<status status="PASS" endtime="20170422 20:43:50.997" starttime="20170422 20:43:50.997"></status>
</kw>
<kw name="Get Strip String" library="openbmc_ffdc_list">
<doc>########################################################################</doc>
<arguments>
<arg>${cur_time}</arg>
</arguments>
<assign>
<var>${cur_time}</var>
</assign>
<msg timestamp="20170422 20:43:50.998" level="INFO">${cur_time} = 20170422204350996810</msg>
<status status="PASS" endtime="20170422 20:43:50.998" starttime="20170422 20:43:50.997"></status>
</kw>
<msg timestamp="20170422 20:43:50.998" level="INFO">${cur_time} = 20170422204350996810</msg>
<status status="PASS" endtime="20170422 20:43:50.998" starttime="20170422 20:43:50.996"></status>
</kw>
<kw name="Append To File" library="OperatingSystem">
<doc>Appends the given content to the specified file.</doc>
<arguments>
<arg>${TEST_HISTORY}</arg>
<arg>${cur_time}:${SUITE_NAME}:${TEST_NAME}:${TEST_STATUS}${\n}</arg>
</arguments>
<msg timestamp="20170422 20:43:50.999" html="yes" level="INFO">Appended to file '&lt;a href="file:///home/fspcibld/logs/test_history.txt"&gt;/home/fspcibld/logs/test_history.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170422 20:43:50.999" starttime="20170422 20:43:50.998"></status>
</kw>
<status status="PASS" endtime="20170422 20:43:50.999" starttime="20170422 20:43:50.993"></status>
</kw>
<status status="FAIL" endtime="20170422 20:43:50.999" starttime="20170422 20:41:46.515"></status>
</kw>
<msg timestamp="20170422 20:43:50.999" level="FAIL">Several failures occurred:

1) Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'

2) timeout: timed out

3) Connection not open

4) Could not get length of 'None'.

5) Could not get length of 'None'.</msg>
<status status="FAIL" endtime="20170422 20:43:50.999" starttime="20170422 20:41:46.508">Several failures occurred:

1) Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'

2) timeout: timed out

3) Connection not open

4) Could not get length of 'None'.

5) Could not get length of 'None'.</status>
</kw>
<doc>Initiate a code update on the BMC.</doc>
<tags>
<tag>Initiate_Code_Update_BMC</tag>
</tags>
<status status="FAIL" endtime="20170422 20:43:51.000" critical="yes" starttime="20170422 20:41:16.458">timeout: timed out

Also teardown failed:
Several failures occurred:

1) Replacing variables from keyword return value failed: Resolving variable '${state.rsplit('.', 1)[1]}' failed: AttributeError: 'NoneType' object has no attribute 'rsplit'

2) timeout: timed out

3) Connection not open

4) Could not get length of 'None'.

5) Could not get length of 'None'.</status>
</test>
<doc>Trigger code update to a target BMC.
Execution Method :
python -m robot -v OPENBMC_HOST:&lt;hostname&gt;
-v FILE_PATH:&lt;path/*all.tar&gt; update_bmc.robot

Code update method BMC using REST
Update work flow sequence:
- User input BMC File existence check
- Ping Test and REST authentication
- Set Host Power host setting Policy to RESTORE_LAST_STATE
On reboot this policy would ensure the BMC comes
online and stays at HOST_POWERED_OFF state.
- Issue poweroff
- Prune archived journal logs
- Prepare for Update
- Wait for BMC to come online clean
- Wait for BMC_READY state
- Apply preserve BMC Network setting
- SCP image to BMC
- Activate the flash image
- Warm Reset BMC to activate code
- Wait for BMC to come online time out 30 minutes
- Version check post update</doc>
<status status="FAIL" endtime="20170422 20:43:51.000" starttime="20170422 20:41:15.740"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Initiate_Code_Update_BMC</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="Update Bmc" pass="0">Update Bmc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
